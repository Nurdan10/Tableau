<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
        <calculation class='tableau' formula='&quot;Cumulative&quot;' />
        <members>
          <member value='&quot;Cumulative&quot;' />
          <member value='&quot;New&quot;' />
        </members>
      </column>
      <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
        <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
        <members>
          <member value='&quot;Positive Cases&quot;' />
          <member value='&quot;Deaths&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Custom SQL Query (Covid_19)' inline='true' name='federated.16dnglg0x923nc1ak7p0m16ml1op' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Localhost' name='sqlserver.15r0f380g2ysml1grmw4q1j1peyf'>
            <connection IsolationLevel='ReadUncommitted' authentication='sspi' class='sqlserver' dbname='Covid_19' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' one-time-sql='' server='Localhost' sslmode='require' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.15r0f380g2ysml1grmw4q1j1peyf' name='Custom SQL Query' type='text'>SELECT * FROM [COVID-19 Activity]&#13;
WHERE REPORT_DATE BETWEEN &apos;2022-01-01&apos; AND &apos;2022-04-30&apos;</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.15r0f380g2ysml1grmw4q1j1peyf' name='Custom SQL Query' type='text'>SELECT * FROM [COVID-19 Activity]&#13;
WHERE REPORT_DATE BETWEEN &apos;2022-01-01&apos; AND &apos;2022-04-30&apos;</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_CASES_COUNT</remote-name>
            <remote-type>3</remote-type>
            <local-name>[PEOPLE_POSITIVE_CASES_COUNT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_CASES_COUNT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE_STATE_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PROVINCE_STATE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PROVINCE_STATE_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REPORT_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[REPORT_DATE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>REPORT_DATE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTINENT_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CONTINENT_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>CONTINENT_NAME</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATA_SOURCE_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DATA_SOURCE_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>DATA_SOURCE_NAME</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_NEW_COUNT</remote-name>
            <remote-type>3</remote-type>
            <local-name>[PEOPLE_DEATH_NEW_COUNT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PEOPLE_DEATH_NEW_COUNT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_FIPS_NUMBER</remote-name>
            <remote-type>3</remote-type>
            <local-name>[COUNTY_FIPS_NUMBER]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTY_FIPS_NUMBER</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_3_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_ALPHA_3_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTRY_ALPHA_3_CODE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_SHORT_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_SHORT_NAME]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTRY_SHORT_NAME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_2_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_ALPHA_2_CODE]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>COUNTRY_ALPHA_2_CODE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-name>
            <remote-type>3</remote-type>
            <local-name>[PEOPLE_POSITIVE_NEW_CASES_COUNT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_COUNT</remote-name>
            <remote-type>3</remote-type>
            <local-name>[PEOPLE_DEATH_COUNT]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>PEOPLE_DEATH_COUNT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6DF3FBA59542446F80872E124CC802DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[COUNTRY_ALPHA_2_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[COUNTRY_ALPHA_3_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Max Cumulative Deaths' datatype='integer' name='[Calculation_2227311513788297221]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [COUNTY_NAME] : MAX([PEOPLE_DEATH_COUNT])}' />
      </column>
      <column caption='US Total Deaths' datatype='integer' name='[Calculation_2227311513789501447]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(MAX([Calculation_2227311513788297221]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Case Fatality Rate' datatype='real' name='[Calculation_2227311513801605129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([PEOPLE_DEATH_COUNT])/&#13;&#10;MAX([PEOPLE_POSITIVE_CASES_COUNT])*100' />
      </column>
      <column caption='Min Date' datatype='date' name='[Calculation_2227311514033405962]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MIN([REPORT_DATE])}' />
      </column>
      <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
      </column>
      <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
      </column>
      <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
      </column>
      <column caption='Date is Max' datatype='boolean' name='[Calculation_2227311514037551119]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_2227311514034839563] = [REPORT_DATE]' />
      </column>
      <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_2227311514038882320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;New&apos; THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;ELSE [PEOPLE_POSITIVE_CASES_COUNT] END' />
      </column>
      <column caption='Current Day Cumulative or Positive Cases' datatype='integer' name='[Calculation_2227311514040012817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2227311514037551119] THEN [Calculation_2227311514038882320] END' />
      </column>
      <column caption='Previous Day Cumulative or New Positive Cases' datatype='integer' name='[Calculation_2227311514041167890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;, [REPORT_DATE], [Calculation_2227311514034839563]) = 1 &#13;&#10;THEN [Calculation_2227311514038882320] END' />
      </column>
      <column caption='Difference in Cumulative or New P Previous Day ' datatype='integer' name='[Calculation_2227311514046734355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_2227311514040012817]) - SUM([Calculation_2227311514041167890])' />
      </column>
      <column caption='Difference in Cumulative or New Positive Cases to Previous Day %' datatype='real' default-format='p0.0%' name='[Calculation_2227311514047217684]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2227311514046734355]/&#13;&#10;SUM([Calculation_2227311514041167890])' />
      </column>
      <column caption='Difference in cumulative or New Positive Cases Down' datatype='string' name='[Calculation_2227311514048606229]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2227311514047217684] &lt; 0&#13;&#10;THEN &apos;▼&apos; END' />
      </column>
      <column caption='Difference in Cumulative or New Pos.Cases Up' datatype='string' name='[Calculation_2227311514049441814]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2227311514047217684] &gt; 0 THEN &apos;▲&apos; END' />
      </column>
      <column caption='Selected Metric' datatype='integer' name='[Calculation_2227311514063859749]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_COUNT]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Current Day Cumulative or Deaths' datatype='integer' name='[Current Day Cumulative or Positive Cases (copy)_2227311514057957408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_2227311514037551119] THEN [Total or New Positive Cases (copy 2)_2227311514056986653] END' />
      </column>
      <column caption='Difference in Cumulative or New to Previous Day Deaths' datatype='integer' name='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Current Day Cumulative or Positive Cases (copy)_2227311514057957408]) - SUM([Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798])' />
      </column>
      <column caption='Difference in Cumulative or DeathsUp ' datatype='string' name='[Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] &gt; 0 THEN &apos;▲&apos; END' />
      </column>
      <column caption='ifference in Cumulative or New Deaths to Previous Day %' datatype='real' default-format='p0.0%' name='[Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]/&#13;&#10;SUM([Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798])' />
      </column>
      <column caption='Difference in cumulative or New Positive Cases Equal' datatype='string' name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2227311514047217684] = 0&#13;&#10;THEN &apos;●&apos; END' />
      </column>
      <column caption='Difference in cumulative or Deaths Down ' datatype='string' name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] &lt; 0&#13;&#10;THEN &apos;▼&apos; END' />
      </column>
      <column caption='Difference in cumulative or Deaths Equal ' datatype='string' name='[Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] = 0&#13;&#10;THEN &apos;●&apos; END' />
      </column>
      <column caption='Max Cumulative Cases' datatype='integer' name='[Max Cumulative Deaths (copy)_2227311513788542982]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [COUNTY_NAME] : MAX([PEOPLE_POSITIVE_CASES_COUNT])}' />
      </column>
      <column datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Previous Day Cumulative or New Deaths' datatype='integer' name='[Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  DATEDIFF(&apos;day&apos;, [REPORT_DATE], [Calculation_2227311514034839563]) = 1   THEN  [Total or New Positive Cases (copy 2)_2227311514056986653] END' />
      </column>
      <column caption='Total or New Deaths' datatype='integer' name='[Total or New Positive Cases (copy 2)_2227311514056986653]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;ELSE [PEOPLE_DEATH_COUNT] END' />
      </column>
      <column caption='Total or New Positive Cases (copy)' datatype='integer' name='[Total or New Positive Cases (copy)_2227311514054905880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;New&apos; THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;ELSE [PEOPLE_POSITIVE_CASES_COUNT] END' />
      </column>
      <column caption='US Total Cases' datatype='integer' name='[US Total Deaths (copy)_2227311513789911048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(MAX([Max Cumulative Deaths (copy)_2227311513788542982]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_6DF3FBA59542446F80872E124CC802DE]' role='measure' type='quantitative' />
      <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Date' role='dimensions'>
        <folder-item name='[Calculation_2227311514033405962]' type='field' />
        <folder-item name='[Calculation_2227311514034839563]' type='field' />
        <folder-item name='[Calculation_2227311514036400141]' type='field' />
        <folder-item name='[Calculation_2227311514036723726]' type='field' />
        <folder-item name='[Calculation_2227311514037551119]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Deaths' role='measures'>
        <folder-item name='[Current Day Cumulative or Positive Cases (copy)_2227311514057957408]' type='field' />
        <folder-item name='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]' type='field' />
        <folder-item name='[Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116]' type='field' />
        <folder-item name='[Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465]' type='field' />
        <folder-item name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362]' type='field' />
        <folder-item name='[Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467]' type='field' />
        <folder-item name='[Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798]' type='field' />
        <folder-item name='[Total or New Positive Cases (copy 2)_2227311514056986653]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Positive Cases' role='measures'>
        <folder-item name='[Calculation_2227311514038882320]' type='field' />
        <folder-item name='[Calculation_2227311514040012817]' type='field' />
        <folder-item name='[Calculation_2227311514041167890]' type='field' />
        <folder-item name='[Calculation_2227311514046734355]' type='field' />
        <folder-item name='[Calculation_2227311514047217684]' type='field' />
        <folder-item name='[Calculation_2227311514048606229]' type='field' />
        <folder-item name='[Calculation_2227311514049441814]' type='field' />
        <folder-item name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Date'>
          <folder-item name='[Calculation_2227311514033405962]' type='field' />
          <folder-item name='[Calculation_2227311514034839563]' type='field' />
          <folder-item name='[Calculation_2227311514036400141]' type='field' />
          <folder-item name='[Calculation_2227311514036723726]' type='field' />
          <folder-item name='[Calculation_2227311514037551119]' type='field' />
        </folder>
        <folder name='Deaths'>
          <folder-item name='[Current Day Cumulative or Positive Cases (copy)_2227311514057957408]' type='field' />
          <folder-item name='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]' type='field' />
          <folder-item name='[Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116]' type='field' />
          <folder-item name='[Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465]' type='field' />
          <folder-item name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362]' type='field' />
          <folder-item name='[Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467]' type='field' />
          <folder-item name='[Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798]' type='field' />
          <folder-item name='[Total or New Positive Cases (copy 2)_2227311514056986653]' type='field' />
        </folder>
        <folder name='Positive Cases'>
          <folder-item name='[Calculation_2227311514038882320]' type='field' />
          <folder-item name='[Calculation_2227311514040012817]' type='field' />
          <folder-item name='[Calculation_2227311514041167890]' type='field' />
          <folder-item name='[Calculation_2227311514046734355]' type='field' />
          <folder-item name='[Calculation_2227311514047217684]' type='field' />
          <folder-item name='[Calculation_2227311514048606229]' type='field' />
          <folder-item name='[Calculation_2227311514049441814]' type='field' />
          <folder-item name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTY_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adjuntas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arroyo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chouteau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Judith Basin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loiza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naranjito&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shoshone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vega Alta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yabucoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lares&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guaynabo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lajas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Marias&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morovis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naguabo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aibonito&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ciales&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haakon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hormigueros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kusilvak Census Area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maunabo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Petroleum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aguada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barceloneta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gurabo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hooker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juncos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vega Baja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Borden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gilliam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Humacao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Piedras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martinsville city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ontonagon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patillas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perkins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. John&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toa Alta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harmon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McCone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McMullen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pending County Assignment&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rawlins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tinian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corozal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daggett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;De Baca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guanica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quebradillas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rincon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sabana Grande&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San German&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stonewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Powder River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vieques&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayamon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lake of the Woods&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toa Baja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wibaux&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barranquitas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caguas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hayes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isabela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kingman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sterling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bristol Bay plus Lake and Peninsula&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canovanas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cidra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dundy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Foard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kalawao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maricao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wallace&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Catano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Doddridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skagway Municipality&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Utuado&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yauco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coamo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dolores&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Esmeralda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Loving&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Villalba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bear Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Rojo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Camuy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fajardo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hatillo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orocovis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ceiba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comerio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daniels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jayuya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juana Diaz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luquillo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anasco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carolina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guayama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Penuelas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mayaguez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Towner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aguas Buenas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Culebra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Sebastian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trujillo Alto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yakutat plus Hoonah-Angoon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cayey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guayanilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roger Mills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Isabel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweet Grass&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COUNTRY_SHORT_NAME:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
          <calculation class='tableau' formula='&quot;Cumulative&quot;' />
        </column>
        <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
          <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_6DF3FBA59542446F80872E124CC802DE'>
            <properties context=''>
              <relation connection='sqlserver.15r0f380g2ysml1grmw4q1j1peyf' name='Custom SQL Query' type='text'>SELECT * FROM [COVID-19 Activity]&#13;
WHERE REPORT_DATE BETWEEN &apos;2022-01-01&apos; AND &apos;2022-04-30&apos;</relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.16dnglg0x923nc1ak7p0m16ml1op'>
      <datasources>
        <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
      </datasources>
      <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
        <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
        </column>
        <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]' context='true'>
        <groupfilter function='member' level='[none:Calculation_2227311514036723726:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Global Deaths BAN'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
            </column>
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column caption='Date is Max' datatype='boolean' name='[Calculation_2227311514037551119]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2227311514034839563] = [REPORT_DATE]' />
            </column>
            <column caption='Current Day Cumulative or Deaths' datatype='integer' name='[Current Day Cumulative or Positive Cases (copy)_2227311514057957408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_2227311514037551119] THEN [Total or New Positive Cases (copy 2)_2227311514056986653] END' />
            </column>
            <column caption='Difference in Cumulative or New to Previous Day Deaths' datatype='integer' name='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Current Day Cumulative or Positive Cases (copy)_2227311514057957408]) - SUM([Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798])' />
            </column>
            <column caption='Difference in Cumulative or DeathsUp ' datatype='string' name='[Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] &gt; 0 THEN &apos;▲&apos; END' />
            </column>
            <column caption='ifference in Cumulative or New Deaths to Previous Day %' datatype='real' default-format='p0.0%' name='[Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]/&#13;&#10;SUM([Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798])' />
            </column>
            <column caption='Difference in cumulative or Deaths Down ' datatype='string' name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] &lt; 0&#13;&#10;THEN &apos;▼&apos; END' />
            </column>
            <column caption='Difference in cumulative or Deaths Equal ' datatype='string' name='[Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465] = 0&#13;&#10;THEN &apos;●&apos; END' />
            </column>
            <column datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='Previous Day Cumulative or New Deaths' datatype='integer' name='[Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  DATEDIFF(&apos;day&apos;, [REPORT_DATE], [Calculation_2227311514034839563]) = 1   THEN  [Total or New Positive Cases (copy 2)_2227311514056986653] END' />
            </column>
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column caption='Total or New Deaths' datatype='integer' name='[Total or New Positive Cases (copy 2)_2227311514056986653]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;ELSE [PEOPLE_DEATH_COUNT] END' />
            </column>
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Current Day Cumulative or Positive Cases (copy)_2227311514057957408]' derivation='Sum' name='[sum:Current Day Cumulative or Positive Cases (copy)_2227311514057957408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798]' derivation='Sum' name='[sum:Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759]' derivation='User' name='[usr:Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116]' derivation='User' name='[usr:Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116:nk]' pivot='key' type='nominal' />
            <column-instance column='[Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465]' derivation='User' name='[usr:Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362]' derivation='User' name='[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362:nk]' pivot='key' type='nominal' />
            <column-instance column='[Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467]' derivation='User' name='[usr:Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='410' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Current Day Cumulative or Positive Cases (copy)_2227311514057957408:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467:nk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116:nk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362:nk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference Cum or N.Positive and cum or prev day  (copy)_2227311514057801759:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465:qk]' />
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='16'><![CDATA[<[Parameters].[Parameter 1]> Deaths]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='24'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Current Day Cumulative or Positive Cases (copy)_2227311514057957408:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362:nk]>]]></run>
                <run fontcolor='#aa0000'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116:nk]>]]></run>
                <run fontcolor='#666666'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467:nk]>]]></run>
                <run><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in Cumulative or New Positive Cases to Previous Day % (copy)_2227311514058514465:qk]>
<[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Previous Day Cumulative or New Positive Cases (copy)_2227311514057248798:qk]>

]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9D2E716D-EB30-4216-B0F5-888D93A8A84D}' />
    </worksheet>
    <worksheet name='Global Deaths Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column caption='Total or New Deaths' datatype='integer' name='[Total or New Positive Cases (copy 2)_2227311514056986653]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;ELSE [PEOPLE_DEATH_COUNT] END' />
            </column>
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total or New Positive Cases (copy 2)_2227311514056986653]' derivation='Sum' name='[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REPORT_DATE]' derivation='Day-Trunc' name='[tdy:REPORT_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]' field-type='quantitative' major-origin='#2022-03-01 00:00:00#' major-spacing='1.0' major-units='months' minor-origin='#2022-03-01 00:00:00#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b7f2' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b3ed' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-transparency' value='68' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b7f2' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk] + [federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Total or New Positive Cases (copy 2)_2227311514056986653:qk])</rows>
        <cols>[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{AC6E152A-5DE9-4C55-AF21-7D1302F8B4D7}' />
    </worksheet>
    <worksheet name='Global Positive BAN'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
            </column>
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column caption='Date is Max' datatype='boolean' name='[Calculation_2227311514037551119]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2227311514034839563] = [REPORT_DATE]' />
            </column>
            <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_2227311514038882320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;New&apos; THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;ELSE [PEOPLE_POSITIVE_CASES_COUNT] END' />
            </column>
            <column caption='Current Day Cumulative or Positive Cases' datatype='integer' name='[Calculation_2227311514040012817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_2227311514037551119] THEN [Calculation_2227311514038882320] END' />
            </column>
            <column caption='Previous Day Cumulative or New Positive Cases' datatype='integer' name='[Calculation_2227311514041167890]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;, [REPORT_DATE], [Calculation_2227311514034839563]) = 1 &#13;&#10;THEN [Calculation_2227311514038882320] END' />
            </column>
            <column caption='Difference in Cumulative or New P Previous Day ' datatype='integer' name='[Calculation_2227311514046734355]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_2227311514040012817]) - SUM([Calculation_2227311514041167890])' />
            </column>
            <column caption='Difference in Cumulative or New Positive Cases to Previous Day %' datatype='real' default-format='p0.0%' name='[Calculation_2227311514047217684]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2227311514046734355]/&#13;&#10;SUM([Calculation_2227311514041167890])' />
            </column>
            <column caption='Difference in cumulative or New Positive Cases Down' datatype='string' name='[Calculation_2227311514048606229]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2227311514047217684] &lt; 0&#13;&#10;THEN &apos;▼&apos; END' />
            </column>
            <column caption='Difference in Cumulative or New Pos.Cases Up' datatype='string' name='[Calculation_2227311514049441814]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2227311514047217684] &gt; 0 THEN &apos;▲&apos; END' />
            </column>
            <column caption='Difference in cumulative or New Positive Cases Equal' datatype='string' name='[Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_2227311514047217684] = 0&#13;&#10;THEN &apos;●&apos; END' />
            </column>
            <column datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514040012817]' derivation='Sum' name='[sum:Calculation_2227311514040012817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2227311514041167890]' derivation='Sum' name='[sum:Calculation_2227311514041167890:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2227311514047217684]' derivation='User' name='[usr:Calculation_2227311514047217684:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2227311514048606229]' derivation='User' name='[usr:Calculation_2227311514048606229:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514049441814]' derivation='User' name='[usr:Calculation_2227311514049441814:nk]' pivot='key' type='nominal' />
            <column-instance column='[Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047]' derivation='User' name='[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='373' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514040012817:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514041167890:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514047217684:qk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514049441814:nk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514048606229:nk]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047:nk]' />
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='16'><![CDATA[<[Parameters].[Parameter 1]> Positive Cases]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='24'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514040012817:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514048606229:nk]>]]></run>
                <run fontcolor='#aa0000'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047:nk]><[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514049441814:nk]>]]></run>
                <run fontcolor='#666666'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514047217684:qk]>]]></run>
                <run><![CDATA[
<[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514041167890:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{39F5DB46-051E-447A-8DCC-FB7EC878A0E9}' />
    </worksheet>
    <worksheet name='Global Positive Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column caption='Total or New Positive Cases' datatype='integer' name='[Calculation_2227311514038882320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &apos;New&apos; THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;ELSE [PEOPLE_POSITIVE_CASES_COUNT] END' />
            </column>
            <column datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514038882320]' derivation='Sum' name='[sum:Calculation_2227311514038882320:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REPORT_DATE]' derivation='Day-Trunc' name='[tdy:REPORT_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]' field-type='quantitative' major-origin='#2022-03-01 00:00:00#' major-spacing='1.0' major-units='months' minor-origin='#2022-03-01 00:00:00#' minor-show='false' minor-spacing='1.0' minor-units='months' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b7f2' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b7f2' />
                <format attr='mark-transparency' value='57' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b7f2' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk] + [federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514038882320:qk])</rows>
        <cols>[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{A4E64CDE-63AD-44DA-9211-1031870BF987}' />
    </worksheet>
    <worksheet name='Global Title'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
          </datasources>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Min Date' datatype='date' name='[Calculation_2227311514033405962]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MIN([REPORT_DATE])}' />
            </column>
            <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
            </column>
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2227311514033405962]' derivation='MDY' name='[md:Calculation_2227311514033405962:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2227311514034839563]' derivation='MDY' name='[md:Calculation_2227311514034839563:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='180' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514033405962:ok]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#242e41' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514033405962:ok]' />
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514034839563:ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#ffffff' fontsize='18'>Global Covid-19 Tracker</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#ffffff'><![CDATA[<[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514033405962:ok]> - <[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514034839563:ok]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514033405962:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{8B0617CC-F053-4995-8DB3-C9CF2476FC32}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
            <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
              <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
            </column>
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column caption='Date is Max' datatype='boolean' name='[Calculation_2227311514037551119]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2227311514034839563] = [REPORT_DATE]' />
            </column>
            <column caption='Selected Metric' datatype='integer' name='[Calculation_2227311514063859749]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_COUNT]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514037551119]' derivation='None' name='[none:Calculation_2227311514037551119:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514063859749]' derivation='Sum' name='[sum:Calculation_2227311514063859749:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]'>
            <groupfilter function='member' level='[none:Calculation_2227311514037551119:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]' />
              <lod column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:COUNTRY_SHORT_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00b3ed' />
                <format attr='size' value='2' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#00b7f2' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16dnglg0x923nc1ak7p0m16ml1op].[Latitude (generated)]</rows>
        <cols>[federated.16dnglg0x923nc1ak7p0m16ml1op].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02D5E9C3-AC1D-4864-96BC-4AD3F43B062A}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (Covid_19)' name='federated.16dnglg0x923nc1ak7p0m16ml1op' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cumulative or New' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cumulative&quot;'>
              <calculation class='tableau' formula='&quot;Cumulative&quot;' />
            </column>
            <column caption='Positive Cases or Deaths' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Positive Cases&quot;'>
              <calculation class='tableau' formula='&quot;Positive Cases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.16dnglg0x923nc1ak7p0m16ml1op'>
            <column datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Max Date' datatype='date' name='[Calculation_2227311514034839563]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([REPORT_DATE])}' />
            </column>
            <column caption='Max Date for US' datatype='date' name='[Calculation_2227311514036400141]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [COUNTRY_SHORT_NAME] = &quot;United States&quot; THEN [REPORT_DATE] END) }' />
            </column>
            <column caption='Date Less Then or Equal US Date' datatype='boolean' name='[Calculation_2227311514036723726]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[REPORT_DATE] &lt;= [Calculation_2227311514036400141]' />
            </column>
            <column caption='Date is Max' datatype='boolean' name='[Calculation_2227311514037551119]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2227311514034839563] = [REPORT_DATE]' />
            </column>
            <column caption='Selected Metric' datatype='integer' name='[Calculation_2227311514063859749]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_NEW_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;New&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_NEW_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Positive Cases&quot;&#13;&#10;THEN [PEOPLE_POSITIVE_CASES_COUNT]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Cumulative&quot; AND [Parameters].[Parameter 2] = &quot;Deaths&quot;&#13;&#10;THEN [PEOPLE_DEATH_COUNT]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514036723726]' derivation='None' name='[none:Calculation_2227311514036723726:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514037551119]' derivation='None' name='[none:Calculation_2227311514037551119:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2227311514063859749]' derivation='Sum' name='[sum:Calculation_2227311514063859749:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]'>
            <groupfilter function='member' level='[none:Calculation_2227311514037551119:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:COUNTRY_SHORT_NAME:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</column>
            <column>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]' value='8' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#00b3ed' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#00b7f2' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:COUNTRY_SHORT_NAME:nk]</rows>
        <cols>[federated.16dnglg0x923nc1ak7p0m16ml1op].[sum:Calculation_2227311514063859749:qk]</cols>
      </table>
      <simple-id uuid='{1F60961B-EB08-4C11-84A6-F22E42C50FEA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Global Title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514033405962:ok]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[md:Calculation_2227311514034839563:ok]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC1D28C9-4403-43D3-897D-9759E629F8B2}' />
    </window>
    <window class='worksheet' name='Global Positive BAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514048606229:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Calculation_2227311514049441814:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514049921047:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB142520-552A-4391-BAD9-D74F6F2BDAAC}' />
    </window>
    <window class='worksheet' name='Global Positive Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82B9CB3A-4F25-4C57-BD19-0B9E77FB74CF}' />
    </window>
    <window class='worksheet' name='Global Deaths Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514036723726:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[tdy:REPORT_DATE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E91991BF-471E-4105-BEC3-0D0AD90252C6}' />
    </window>
    <window class='worksheet' name='Global Deaths BAN'>
      <cards>
        <edge name='left'>
          <strip size='271'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in Cumulative or New Pos.Cases Up (copy)_2227311514059694116:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Down (copy)_2227311514059235362:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[usr:Difference in cumulative or New Positive Cases Equal (copy)_2227311514059538467:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3F8A529-1A34-4C40-B1BF-EA1278052097}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F092C158-6DA5-440C-A205-ACCD3E9E68CE}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.16dnglg0x923nc1ak7p0m16ml1op].[none:Calculation_2227311514037551119:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAEA8788-2571-49DE-893F-893D4745C0DC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='160' name='Global Deaths BAN' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACgCAYAAABaKGNdAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADrElEQVR4nO3bIUhrURzH8Z8yHWMIE2RhQaYgGATFsGg0CPblpRsNRsFitFnVYNQ6lqwq
      2BQEkwwZQ0ExyBDHPLO990Tfg10eyPH3/eR7/txwvnDv5Z6hfr/fF2Bq+LtvAPhOBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrme++AeB/eX5+
      1uHhoRqNhlqtlt7e3pTNZjU1NaXV1VWtrKxobGzsw5ohzgTjJzg5OdHm5qaKxaLW1tY0Pz+v
      bDar19dXXVxcaHd3V71eTzs7O8rn87/WEQCi12g0tLW1pWq1qiRJNDo6+umaEILu7u5ULBaV
      yfx+8CEARK3ZbCpJElUqFW1sbHy5+f+Fl2BEK4Sgg4MDSVKtVht480sEgIi1Wi2dnZ1pcXFR
      k5OTA6+/vLwkAMTr+vpaj4+PWlpa0vBwuq1MAIhWs9lULpdTqVRKPYMAEK2bmxvl83lNTEyk
      nkEAiN6fnzUHRQCIXq/XS72WABCt6elpdTodPTw8pJ5BAIhWuVzWy8uL2u126hkEgGjNzs6q
      UCjo/PxcIYRUMwgA0SqVSqpUKjo9PdXt7W2qGQSAaGUyGVWrVXW7Xe3v76vb7Q48gwAQtbm5
      Oa2vr+v4+Fh7e3t/fRQKIajdbn/4YlQoFPgbFPELIaher2t7e1szMzNKkkQLCwsaGRlRp9PR
      1dXVl+cBQggEgJ/j6elJR0dHqtfrur+//3QibHl5WePj4x/WEACs8Q4AawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAa++VP8cPtzfXHAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global Deaths Over Time' width='192'>
      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
      ATFxU68J+dMVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='139' name='Global Positive BAN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Positive Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Title' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      J7OG/g0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
