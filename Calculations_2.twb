<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sales &gt; ?' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='125000'>
        <calculation class='tableau' formula='125000' />
        <range granularity='25000' max='300000' min='25000' />
      </column>
      <column caption='Multiplier' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range granularity='1' max='10' min='1' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <range granularity='0.2' max='1.0' min='-1.0' />
      </column>
      <column caption='Dimension Select' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Segment&quot;' />
          <member value='&quot;State&quot;' />
        </members>
      </column>
      <column caption='Measure Select' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
        <calculation class='tableau' formula='&quot;Quantity&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity&quot;' />
        </members>
      </column>
      <column caption='Top N' datatype='integer' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='27'>
        <calculation class='tableau' formula='27' />
        <range max='100' min='1' />
      </column>
      <column caption='Start Date' datatype='date' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
        <calculation class='tableau' formula='#2019-01-03#' />
        <range max='#2022-12-30#' min='#2019-01-03#' />
      </column>
      <column alias='High' caption='Reference Line Profit' datatype='real' name='[Parameter 8]' param-domain-type='list' role='measure' type='quantitative' value='0.4'>
        <calculation class='tableau' formula='0.4' />
        <aliases>
          <alias key='0.1' value='Low' />
          <alias key='0.25' value='Medium' />
          <alias key='0.4' value='High' />
        </aliases>
        <members>
          <member alias='Low' value='0.1' />
          <member alias='Medium' value='0.25' />
          <member alias='High' value='0.4' />
        </members>
      </column>
      <column caption='End Date' datatype='date' name='[Start Date (copy)_265430924251803656]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
        <calculation class='tableau' formula='#2019-01-03#' />
        <range max='#2022-12-30#' min='#2019-01-03#' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1uqt0w117f4m4m10q7p481k79nh7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0bn8fs21hu6aks17vezc71og6bbh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nurda/Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bn8fs21hu6aks17vezc71og6bbh' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bn8fs21hu6aks17vezc71og6bbh' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='California and New York Sales %' datatype='real' name='[Calculation_265430924229259266]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF ([State/Province] = &apos;California&apos;) OR ([State/Province] = &apos;New York&apos;) &#13;&#10;THEN [Sales]&#13;&#10;ELSE 0 END)&#13;&#10;/&#13;&#10;SUM([Sales])' />
      </column>
      <column caption='Sales &gt; 100K' datatype='boolean' name='[Calculation_265430924231475203]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Sales]) &gt;[Parameters].[Parameter 1]' />
      </column>
      <column caption='Multiplied Sales' datatype='real' name='[Calculation_265430924238934020]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales] * [Parameters].[Parameter 2]' />
      </column>
      <column caption='Target Sales' datatype='real' name='[Calculation_265430924240138245]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) * (1 +[Parameters].[Parameter 3] )' />
      </column>
      <column caption='Selected Dimension' datatype='string' name='[Calculation_265430924243570694]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//IF [Dimension Select] = &apos;Segment&apos; THEN [Segment]&#13;&#10;//ELSEIF  [Dimension Select] = &apos;Region&apos; THEN [Region]&#13;&#10;//ELSEIF [Dimension Select] = &apos;State&apos; THEN [State/Province]&#13;&#10;//END&#13;&#10;&#13;&#10;CASE  [Parameters].[Parameter 4] &#13;&#10;WHEN &apos;Region&apos; THEN [Region]&#13;&#10;WHEN &apos;Segment&apos; THEN [Segment]&#13;&#10;WHEN &apos;State&apos; THEN [State/Province]&#13;&#10;END' />
      </column>
      <column caption='Selected Measure' datatype='real' name='[Calculation_265430924245524487]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 5]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Quantity&apos; THEN [Quantity]&#13;&#10;WHEN &apos;Sales&apos; THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='Date Range' datatype='boolean' name='[Calculation_265430924252069897]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Order Date] &gt;= [Parameters].[Parameter 7] AND [Order Date]&lt;= [Parameters].[Start Date (copy)_265430924251803656]' />
      </column>
      <column caption='Profit/sales' datatype='real' name='[Calculation_265430924264259594]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/Province (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State/Province]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;California &amp; New York&quot;'>
            <value>&quot;California&quot;</value>
            <value>&quot;New York&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4]' role='measure' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[Region]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_265430924238934020]' derivation='Sum' name='[sum:Calculation_265430924238934020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_265430924240138245]' derivation='User' name='[usr:Calculation_265430924240138245:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Calculation_265430924238934020:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[diff:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924240138245:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sales &gt; ?' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='125000'>
          <calculation class='tableau' formula='125000' />
          <range granularity='25000' max='300000' min='25000' />
        </column>
        <column caption='Multiplier' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range granularity='1' max='10' min='1' />
        </column>
        <column caption='Sales Forecast' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <range granularity='0.2' max='1.0' min='-1.0' />
        </column>
        <column caption='Dimension Select' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
        <column caption='Measure Select' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
          <calculation class='tableau' formula='&quot;Quantity&quot;' />
        </column>
        <column caption='Start Date' datatype='date' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
          <calculation class='tableau' formula='#2019-01-03#' />
          <range max='#2022-12-30#' min='#2019-01-03#' />
        </column>
        <column caption='End Date' datatype='date' name='[Start Date (copy)_265430924251803656]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
          <calculation class='tableau' formula='#2019-01-03#' />
          <range max='#2022-12-30#' min='#2019-01-03#' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{b343ee16-bc91-484e-8c56-286ef3d6cd4d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_2CAAF69AB8BD43C38617A01EA7B3F9B4'>
            <properties context=''>
              <relation connection='excel-direct.0bn8fs21hu6aks17vezc71og6bbh' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Clustering'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{b343ee16-bc91-484e-8c56-286ef3d6cd4d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk] / [federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk])</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{FEE3D602-F508-4F41-9622-992FD0EB1B8B}' />
    </worksheet>
    <worksheet name='Const./Avg.Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#efebe8' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#aa00004b' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{8249056B-BE17-4D52-825C-AFD82A0784B6}' />
    </worksheet>
    <worksheet name='Date Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='date' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
              <calculation class='tableau' formula='#2019-01-03#' />
              <range max='#2022-12-30#' min='#2019-01-03#' />
            </column>
            <column caption='End Date' datatype='date' name='[Start Date (copy)_265430924251803656]' param-domain-type='range' role='measure' type='quantitative' value='#2019-01-03#'>
              <calculation class='tableau' formula='#2019-01-03#' />
              <range max='#2022-12-30#' min='#2019-01-03#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Date Range' datatype='boolean' name='[Calculation_265430924252069897]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Order Date] &gt;= [Parameters].[Parameter 7] AND [Order Date]&lt;= [Parameters].[Start Date (copy)_265430924251803656]' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_265430924252069897]' derivation='None' name='[none:Calculation_265430924252069897:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924252069897:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_265430924252069897:nk]' />
              <groupfilter function='member' level='[none:Calculation_265430924252069897:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924252069897:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{82B7A57F-C091-4284-989F-DC0E5081DBCB}' />
    </worksheet>
    <worksheet name='Dimension Select'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Dimension Select' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Selected Dimension' datatype='string' name='[Calculation_265430924243570694]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//IF [Dimension Select] = &apos;Segment&apos; THEN [Segment]&#13;&#10;//ELSEIF  [Dimension Select] = &apos;Region&apos; THEN [Region]&#13;&#10;//ELSEIF [Dimension Select] = &apos;State&apos; THEN [State/Province]&#13;&#10;//END&#13;&#10;&#13;&#10;CASE  [Parameters].[Parameter 4] &#13;&#10;WHEN &apos;Region&apos; THEN [Region]&#13;&#10;WHEN &apos;Segment&apos; THEN [Segment]&#13;&#10;WHEN &apos;State&apos; THEN [State/Province]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_265430924243570694]' derivation='None' name='[none:Calculation_265430924243570694:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924243570694:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{9B0DEC70-4AE9-42D0-9CBB-01614FB310B6}' />
    </worksheet>
    <worksheet name='Dynamic Top N'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 6]' param-domain-type='range' role='measure' type='quantitative' value='27'>
              <calculation class='tableau' formula='27' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 6]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Customer Name:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{996F4446-E026-41FE-B859-A30B0ACFC50D}' />
    </worksheet>
    <worksheet name='Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5275EB94-22B3-446C-97EC-24DA1CE3AC87}' />
    </worksheet>
    <worksheet name='Measure Select'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Dimension Select' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
            <column caption='Measure Select' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
              <calculation class='tableau' formula='&quot;Quantity&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Selected Dimension' datatype='string' name='[Calculation_265430924243570694]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//IF [Dimension Select] = &apos;Segment&apos; THEN [Segment]&#13;&#10;//ELSEIF  [Dimension Select] = &apos;Region&apos; THEN [Region]&#13;&#10;//ELSEIF [Dimension Select] = &apos;State&apos; THEN [State/Province]&#13;&#10;//END&#13;&#10;&#13;&#10;CASE  [Parameters].[Parameter 4] &#13;&#10;WHEN &apos;Region&apos; THEN [Region]&#13;&#10;WHEN &apos;Segment&apos; THEN [Segment]&#13;&#10;WHEN &apos;State&apos; THEN [State/Province]&#13;&#10;END' />
            </column>
            <column caption='Selected Measure' datatype='real' name='[Calculation_265430924245524487]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 5]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Quantity&apos; THEN [Quantity]&#13;&#10;WHEN &apos;Sales&apos; THEN [Sales]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_265430924243570694]' derivation='None' name='[none:Calculation_265430924243570694:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430924245524487]' derivation='Sum' name='[sum:Calculation_265430924245524487:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924243570694:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Calculation_265430924245524487:qk]</cols>
      </table>
      <simple-id uuid='{963442B9-9957-4F69-94C4-570DF3F59790}' />
    </worksheet>
    <worksheet name='Multiply'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Multiplier' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range granularity='1' max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Multiplied Sales' datatype='real' name='[Calculation_265430924238934020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales] * [Parameters].[Parameter 2]' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430924238934020]' derivation='Sum' name='[sum:Calculation_265430924238934020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Calculation_265430924238934020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[Multiple Values]</rows>
        <cols>([federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Segment:nk] / [federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{20FF04FB-071F-4521-96D7-E49AD24B780A}' />
    </worksheet>
    <worksheet name='Q1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:State/Province:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Ship Mode:nk]' />
              <text column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[pcto:sum:Sales:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:State/Province:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[pcto:sum:Sales:qk:2]</cols>
      </table>
      <simple-id uuid='{CBD8B9C6-50EF-4A2B-B1F6-70A4ECA23571}' />
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='California and New York Sales %' datatype='real' name='[Calculation_265430924229259266]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF ([State/Province] = &apos;California&apos;) OR ([State/Province] = &apos;New York&apos;) &#13;&#10;THEN [Sales]&#13;&#10;ELSE 0 END)&#13;&#10;/&#13;&#10;SUM([Sales])' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_265430924229259266]' derivation='User' name='[usr:Calculation_265430924229259266:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924229259266:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A53EF2E6-9014-4BB4-B435-9FAAEC60BB75}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{54E5BA9B-8A3C-406E-963F-99A91D94B201}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Profit/sales' datatype='real' name='[Calculation_265430924264259594]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_265430924264259594]' derivation='User' name='[usr:Calculation_265430924264259594:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924264259594:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924264259594:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924264259594:qk] + [federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924264259594:qk])</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{71B2D808-068C-41D8-9EE5-A3F39D915BCD}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bump Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[Region]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]' field-type='quantitative' fold='true' reverse='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]' />
              <text column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.9502761363983154' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2] + [federated.1uqt0w117f4m4m10q7p481k79nh7].[rank:sum:Sales:qk:2])</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{AFD61460-7AB0-4BA3-BF41-E649540B7764}' />
    </worksheet>
    <worksheet name='Sort by'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Measure Select' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
              <calculation class='tableau' formula='&quot;Quantity&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Selected Measure' datatype='real' name='[Calculation_265430924245524487]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 5]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Quantity&apos; THEN [Quantity]&#13;&#10;WHEN &apos;Sales&apos; THEN [Sales]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_265430924245524487]' derivation='Sum' name='[sum:Calculation_265430924245524487:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Calculation_265430924245524487:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</rows>
        <cols>([federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk] + ([federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Profit:qk] + [federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Quantity:qk]))</cols>
      </table>
      <simple-id uuid='{0A32412A-0BE0-4353-8DBF-09BF31060A19}' />
    </worksheet>
    <worksheet name='Table calculation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[diff:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[diff:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk] / [federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk])</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{01EFE445-DCD6-4FD7-8984-A09EC5039C47}' />
    </worksheet>
    <worksheet name='Target Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales Forecast' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <range granularity='0.2' max='1.0' min='-1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Target Sales' datatype='real' name='[Calculation_265430924240138245]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) * (1 +[Parameters].[Parameter 3] )' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_265430924240138245]' derivation='User' name='[usr:Calculation_265430924240138245:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924240138245:qk]' field-type='quantitative' fold='true' max='705113.32290000177' min='0.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' field-type='quantitative' max='705113.32290000177' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924240138245:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.60370165109634399' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk] + [federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924240138245:qk])</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{2C9E2923-6DC1-4803-831A-B6A0128A9CEA}' />
    </worksheet>
    <worksheet name='Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
          </datasources>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk] / [federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk])</rows>
        <cols total='true'>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</cols>
        <subtotals>
          <column>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{64EBC535-4294-4985-8015-479DC57BF895}' />
    </worksheet>
    <worksheet name='parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1uqt0w117f4m4m10q7p481k79nh7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales &gt; ?' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='125000'>
              <calculation class='tableau' formula='125000' />
              <range granularity='25000' max='300000' min='25000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uqt0w117f4m4m10q7p481k79nh7'>
            <column caption='Sales &gt; 100K' datatype='boolean' name='[Calculation_265430924231475203]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Sales]) &gt;[Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_265430924231475203]' derivation='User' name='[usr:Calculation_265430924231475203:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924231475203:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</rows>
        <cols>[federated.1uqt0w117f4m4m10q7p481k79nh7].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{9ACFDE53-2089-4F4A-AD4D-33E93808C4ED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{22A2CC7B-4D04-4227-B190-E5BF02F37B5E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Table calculation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A42CC086-5FC2-4C5D-ACC0-BF6EFB11E54A}' />
    </window>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Ship Mode:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4362905-6087-498C-985A-E26725D369B5}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BE1CC3BA-10A9-4D71-A3AE-DCFE812320F8}' />
    </window>
    <window class='worksheet' name='parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924231475203:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[usr:Calculation_265430924231475203:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2A99C24-B8CB-47D5-979D-AAF18A483D4C}' />
    </window>
    <window class='worksheet' name='Multiply'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B8C95E1-1C2C-4931-BE14-C5921486F9D0}' />
    </window>
    <window class='worksheet' maximized='true' name='Target Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='1' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{763C5F03-217A-48F2-9BFD-F33E4A6E5453}' />
    </window>
    <window class='worksheet' name='Dimension Select'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924243570694:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68BD53AB-FCE1-4ED2-B7B7-8299991C2D72}' />
    </window>
    <window class='worksheet' name='Measure Select'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924243570694:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4BA8996-D265-42E4-94AC-8EE097C074F5}' />
    </window>
    <window class='worksheet' name='Dynamic Top N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FF2E34D-44A9-4334-BE7B-8374FC241205}' />
    </window>
    <window class='worksheet' name='Date Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Start Date (copy)_265430924251803656]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Calculation_265430924252069897:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E871B99E-2007-41DF-AF20-1F0E10D49F98}' />
    </window>
    <window class='worksheet' name='Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10FC2870-6CB7-406F-AE90-A3B83A3E4B21}' />
    </window>
    <window class='worksheet' name='Const./Avg.Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[mn:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05BEF012-8DF9-48F8-8E5A-133CD969602A}' />
    </window>
    <window class='worksheet' name='Clustering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Category:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{98B53B4E-B0B8-43E2-80DE-EA1D66355F1F}' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7795581-0855-40A5-AADF-4D4B43F94F72}' />
    </window>
    <window class='worksheet' name='Sort by'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 5]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2C87C4C-7A4A-464D-BD0D-CDA3FE49E6C3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1255EE98-B32B-441C-92AF-11EDCE1ADDEF}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{156BB4B8-4897-47A6-8E28-96254FC23151}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 8]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[mn:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59050F8E-E62C-46AD-83A9-1BF0C1E6C312}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[none:Region:nk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[tmn:Order Date:qk]</field>
            <field>[federated.1uqt0w117f4m4m10q7p481k79nh7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ED479FE-F482-4507-8535-B64EF72CAB74}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Clustering' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Const./Avg.Line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Date Parameter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dSZAc55Xf/1m519p7o1eAYBMguAgiKRAitVGwxkF67MNY1igUnpgYzdk+
      zcm+WD44bE+Ewz744HCErXBItjz22PIyomdGmhlJFIcURUogKYIEia2B3htde1Xu+fmQnd21
      5FpdVahEfb8bqhNVX1bl+5b33v89hhBCQKGMKalBvCm1KUpSGIgB2LY9iLelUPrOQAyAQkkK
      1AAoYw01AMpYQw2AMtZQA6CMNVycix33JgPg2M3pvuLCMAwolKQQ2QAIsfHrt36MU09/Gfr9
      O9jYLWNuMo1avYGpyTxsPg8CBqcXZwc5XgqlrzBxIsGlzeswJ8+Bre+grNggpoal+Rxu39rC
      vbKGK5+/BIbYsG2brgSURBDZAIht4INfvo3U1CqM8jbShRnkpBT2i1UsL8wAYh7VahWnl07B
      siywLDvosVMoJybWChAVagCUpEC9QJSxhhoAZayhBkAZa6gBUMYaagCUsYYaAGWsoQZAGWuo
      AVDGGmoAlLGGGgBlrKEGQBlrqAFQxhpqAJSxhhoAZayJoQgjuHvjQ8ycfgJqaRMGm4HM6Ni6
      X8HppRkQLotGrYa52alBjpdC6SuxNMESZ6FpAplMFuX7ZTQsE6dP5XDvzgZ2agYuPXcRlmXB
      tm1aHpGSCGIZQCrFwjJNcDwLy7TAWCaq1QZ4ScQpOY9KrY6F6QIAUEEMJRFENwBioWFJ4BoH
      KNo6eI7F0uoiDkp1nD6VA2EF6KoywKFSKP2HSiIpYw31AlHGGmoAlLGGGgBlrKEGQBlrqAFQ
      xhpqAJSxhhoAZayhBkAZa6gBUMYaagCUsYYaAGWsoQZAGWuoAVDGmsgGQAhBrXwAzQKqpfvY
      PSjDUBtY39iGoTWhmzZqtfogx0qh9J0YghiC7TsfYfKxF1DcKyEFG+X7wExBwt31u1BsHguL
      C0dKMKoIoySByAbAMCnMzs7ABAHLckjBAgEgijwss4ZqQ8MKx4IQAtu2BzhkCqV/RBfF2wb2
      ShpYcxeFDA/FljGXFbC1X8HqmRWs8Fk0qhWk0lMghFBBDCURUEUYZayhXiDKWEMNgDLWUAOg
      jDXUAChjDTUAylhDDYAy1lADoIw11AAoYw01AMpYQw2AMtZQA6CMNdQAKGMNNQDKWBOrQ4yL
      aeggSIFjGWiGBZFnQZgUiG3TLFBKoohtAMS28NH169BNgomMCF3XkMmkYbIZcLyAlVPTgxgn
      hTIQYhsAwzCQeA7lchnZXBZnVidx5/Y2NiolfPHF52iTPEqi6EEQQ7B59w4Ui8WEnMLOQRUr
      C9OAWECtUsHy4jwVxFASA1WEUcYa6gWijDXUAChjDTUAylhDDYAy1lADoIw11AAoYw01AMpY
      Qw2AMtZQA6CMNdQAKGMNNYAAFM3AD39x80EPgzJAqAEEUKwpeOujrQc9DMoAoQYQgKKZUDTj
      QQ+DMkCoAQSgaAaaKjWAh5n4kkhC8NG1X0OxWMxPyLhfrmFhbgpEyEFVdawuzg5gmA8GRTOh
      6OaDHgZlgPSkCTYMHabFQjEknDu7gNu3tnCvvIUrX7j0UCnCmqoORTVgmtQIHlZ6MAAbYFJg
      wYBN2fj45ibmZiYwsVDAvc1dPLJ8CgAeCkGMoltoagY4rqd5gpIA4v+yDIunLz4zgKGMHopm
      wLBsmJYNjvU/Ln187wClmoLLTywPcXSUfkAPwQFouomMxIcehNd3yvgfP/3wodj2jRvUAAJQ
      dBNTORlqyEG4rho4qDRxe7s8pJFR+gU1gACaqoHJCAagaAZefn4Nf/nL20MaGaVfUAMIQNNN
      TOXl0GBYQzXwzLkFrO+UoRnUY5QkqAEEoOgmJrIiVN0KvM49K1xcO4W3H/LUiZ++u44/+euP
      cfWTHRSrCnQj+LsZdagB+EAIgaqbmM6n0VD1wGsVzYQs8vjyM2fw46vrQxrh8CGE4M/euoHJ
      nISP7t7Hf/jBr/DPvvMa/v3/eedBD61nqIM7CAKkJR6KFnIG0A1IAgeRZ8GlGOwW65ifyg5p
      kMOFYRh87unVo39bto1/+u2fPMARnQy6AgTBAJLAQdH9zwCEEOiHFbIZhsEXL57Gj6/eGd4Y
      hwgBwHS8xoBBkr2/1AB8cH/TtMRDCYgDEOLMigzjPBrPnl/Ar2/vwzDtIYxyyBAATLsJMAxg
      IzkWYNsEln3821AD8IM4s52zAvhvgSzbRqrloRB5DmtLk7h2Z28IgxwuhmV1RcQZhgHPpmCY
      yTgMv319C6++eePo39QAfLAJQSqVCo0EO9e1z4pffuYR/Oidhy8moGgm0iLf9boocKGxklGh
      VFNw7c7+0b+pAfig6SZEnoUsBh+CbZuA7TCA5dk8GqqOSl0d9DCHSkPRkZE9DIBnE+MOrTY0
      3N2twLadbRs1AB8U3YQscpBFDs2AQJiqm5CEdmdaKsXg7MIkNu/XBj3ModJQDWQkoet1kWeh
      JcQAmpqJpmYc/abUAHxoqo5rU+K5wOiu81B0z4qO+/ThUpPVFR1ZjxVAEvjECIfqioYnz8zi
      zo6TtxXfAIiN9ds38Mur7+NgfxsffHgd9cp9VJsadvYO+j3eB4ZmOMEtMECQk6Oh6M51Hcgh
      h+ckomiG571KAgstIffaUAw8dXYOt7dKAHrSA6SwevoR6LfWUa4qOLs0gfX1LWxVDbz4/DMP
      jSKs1tQgCSxsy4JNiK8qrK5okEWu6+8iz6LR1B4qNVm1oUIWuu9V4Fg0lGTcq2aYWFucwA/e
      vAHTNHuLBB/sbGD61BJKW3ewu1eCnJGxmpvG/VIZy3NTAJKvCDNMG2lJOFKD+anCVN1CLi12
      /T0ji9gp1h8qNZmiW5ibzHrcqwDdtBNxrzYBlmYL2C02kEqxvRlAfmYBgiBg4uxZVBsq8hkJ
      JMXBNIJzZpJEUzU8XX5d12ne10kC+9BlhjpeIK9DMBeaMDgqWLYNnmMh8CxU3eztECwIzpeQ
      4nhMFHJIcTzYFANRFPs62AdJUzOQlngwDINUioFpeUd2G4pzXSeyGK4kSxpO0l/3nCmLweki
      owIh5MhtvTybx9ZBjXqB/Gh1b6ZFf49OU/P2AslicoJDUfFzg4bFSkYFzbAgcE7O1trSFG5v
      lagB+NFQjaPZThY43x+4qQasAA+ZG7Sh6v7bvQQYe+ukdmZhAre2y9QA/NB0C7Lg/Nii4B8L
      8AqEAYc5RAmYFaPi6iM8t0BCMmIejhvXGf/idA47xTo1AD9U3YAkHm+B/PbziuZtAGyKSbwr
      uIvDzNdOnDPA6Bu7oplHq7XAsyCEUAPwQ9FMyIcPtij4h/oV3ThaKVpJpZijfJOHhu5nH0By
      kuGcbe3xbzVTSHsbACE2DMNAvd4c2uBGjc5DsJcs8kgMI3THPFgmBeshMoCgO5EFDmoCtnt1
      RUM+feypfHRx0tsAGjvX8ac/eg2v/vhnQxvcKEEIgWZYEF0D8JFFdophWkmxTJvwYtT50du3
      sLFf9f274z703jAwKQZ2ArZ7DaXdY3d2acrbAOTpFahKA5eeeGxogxtlZB83qE1ImximlRTD
      IMUkxwg+uns/0ABU3fRc6QDnXhPw/DvJfOljN+7KbN7bAJSDDVQNBjs720Mb3KjR+lynRR5N
      jxXAtonfthiAc9BKSp78QVVBtaH5/r2u6J4xAMD5rpJw4G+oBtIt95CW+G4DIIRAQQYFVKGQ
      8FSAcUAUWKg+KwAbUDRX4JJjAOWagnKAgKeh6Mh5pEEArjA+AQbgkc7t8esRbNy7A03Tsbf/
      8KQ3n4SMJKDh4QZttgTLvAjyHo0ShBBUGhoqAStAQzU81WCAswJYh2kGo0xN0ZGT29N1ugyA
      YVJ4dHESDTaPmYI8tMGNEvphyNwlI/OeBlBXdOTS3rMi4AhFkuAeVHUT+YwYugXKyt65XgzD
      hAqHRgFFO47tuHSvAIRAnFrFVy5dACvlhjW2kUI1zCMPEABkRMEzEOaXGuDiSAVH+6EAgHJd
      xepcAXXFP5vXTw/sIgncyK92XvrtrvWbEBsfXL+J0t42tJS3xe9s3kXTTGFCZrF9v4LVxRkQ
      IYtGrY6F+ZnBjH6INDtkjhyXgml1/7hN1Ww7VHWSkQU0lNFPESjXNcxOZlCsKSCEeLp166qB
      5Zz/jkAURv+8Y9l2lyu3ewPLpKCWdzG1ch4ZzmP2IhbW724gNzGLosni7PLkoSJMx+cuP/tQ
      KMLqh2owV+Fk287+tlPxVG+qkFuu60RgGdQToJQ6qDRQyDiGbJpWZ+0rAM53Igsp/3vlWDRV
      DaY5uinxpmWD2DZMcuya7jIAhmHw4pdfDngbBtlsFoypw2Q5bO8eQM7KOJ2fxt5BCSvz0wCS
      rQjTTBuyyB8pnGybAAzTpXhSDQtZDzWYiywJMG0y8kqpckPDTCEDAEixKc+Al6pbyMqS772k
      JR66Obr3qukmeI4Fz7ePrydN8Lnz56AaNjISj3pTQzYtgTAsLHP0l/soaLrZLv728XM3FAPT
      +bTv+2QkIdC1OCqUqgoeXZw8Ukl5+fubqu6Z9u0i8txIp0SrundRr57MlRck8IffUT53/Kas
      4L8fThKdMkcG8Ix0NjV/1yDgZEnuFEd/UijWFEzlZBQyImpN74CXX/kXF1kc7dIoik8qN80G
      9aBT+scwDHiuu/6lnx7YRRaToQmo1DVMZCUUMhJqzW5XKCHkSCLqhySwI60JaKreJV0SYwCm
      NbyDtdvwohUvgYufGMbFL4do1DAO28DmM6JvMIz4aAFcxAG5QQkhuF8+eVay128KJMgA/ugv
      PxhaF8ZW5ZCLJHSXSAw3gGSsALbtFPgtBATDSEgJ9MyAigCUair+5fdeP/HkV1c0z6BlYgzg
      oNrEfh9mgih4VUCTPEQffrOKSxJ0wW4RYIZhkJUFzy0QAN+sV5cg2ehJ2Cs1sH1QO3FE3e8M
      kxgDaKoGynVlKJ+lGhbEDndZRhbaRB+EEBimBYH3d/eyCVCFlesqJnISAKCQkVBtdkeD3RUi
      iEGtdpv3q9ANC8XayX77WlNHNt0do0iMARimhXLdP1eln6heWyCehdoyw9k+EdNWkqAKK9dV
      TGQdA8imBdQ9VgBVNyHxwQ7DQZ13dop1PPPYKdzb9dcqRKGh6sleARTNROmEs0Ccz5I79vad
      ha4ICd8WOLrg0RbElOoqChlnZsynvc8ATiZosItb4NiBVIfbLTbw7LlF3N2rnOh9nFToBJ8B
      NMNEqTb4oBIh5NBn3D5byCLXZgC2TRCyKwCbYkZ+BShWlaNgXi4toKboXQdOv9mzlYzE9706
      HCEEtaaGJx+Zxb29k60AdSXhZwCeY4dWfs9rz9t5oLVsO1AMAxyuAISMdF5UqaZiMu8kuflt
      6Tq1tF5wXCp2Y8Cw70U3LYBhMDeRQa2pneh7bPqUdk+EARDiCLItizwwjW1G4tsOwWEeIOC4
      gdwoZ0mWawomD88AgLO163zOnCBY8BbI0QXHe0D/3f9+J/DcUGs6eguBZ8GmUp6y1KjYHpmg
      QEIMwLRs8FwKksANpf2oV4UDSeDaDsENJXxbADjuQX2EOyge1BRM5o4NgGW7H+QoWyAmpjDe
      sm28e3MnsI3UfrmBuQknSW+6IOOg0rsb3LIJONajekfP7zhEDNMGz6aGJjDxOtx2FoANSw1w
      GfX+WZbllAt3yUjd6rcoWyCG8Z44/DBNG4pm4O6u/+F2c7+GhWlHlLU6VwisWhGG5VPWJSEG
      YIHnWWTTAmoefup+4tELGoDr5z5+MMKSw1w4dsQNwG4v7ZLPSF3pEHUfD0orTMwtkGHZEHgO
      tw5bFXmxdb+GxZksAGB1voD1AGMJ/CzTcsrUeHgtejKA7Y113LxzD0q9gpu370JTalANC6Xy
      yVxVfuimBZ5lMZWTUawO1hXqREa7fd6dwni/5KpOJJGDPqKySM1wcuRbDT4nC10BR7/eYK2k
      DguERQ38NVUDZxcmsFOs+16zX2li9nALtDiTw1aPXTeDUlZ6SIcm2Nvbw+T8Cja39zA7KePu
      +j2UVeDcY48eqcH66f/WDQscy6CQFVGsKgP1rTdVHbLIdX0GxzLQDfPo9bqiQRa6r+tE4lko
      qjGS8YByTUVOFkBaPFVuPlDreOuKDklkQ+9B4FJOUeGA/CiXSkPF7EQGG/tVqLrRVoQAcA7i
      lbqKrMTDtm3kZB6VugrLsj1X6CAUzXD6vXmMv4cukcC5J55GvXQfFsGRhpRlHd1sWHS0FzTd
      hCRymMzJAxeYNH26oXce8pqaGRocAkY7T77SUFHItqcHZGWhSxzfUI2uciJeiEJ0UUyl4aRg
      T+dl7JUaXX/XDBNsijlKNeE5FqLA9pRb1ecVAKgW95GfnsNMXsLW/SpWT6+AcGkojRoYJn3Y
      Vqh/xwvNtCAJPCazEj6+e9DX9+76LN2CLHJdn0HgzB7u603NQFYWQseSlpzSKIMcc6+U6xqm
      8um2sU3mZHyycfwdE0KgHBp72D1IAgfNtCPda7WhYTInQeBZrO9WsDo/0fb3hmogn5Xa3ms6
      n0axpiDnkdMTRND44/8qDIP5xRUsL8xByuRx9vQyBCkLkUtholCI/XZRUDQTaZFDISuh0hjs
      CtDw8Xl3Vj8LK4rlIvuUVRwFynUVUy0uUADIZbodDeahXiAMiY9eJr3W1JBLi3h0cdIzzX23
      dOwCdVmdK+BuDzlBfq2dgIR4gRTNOZhmJB61gNo1/UDTTUgeRWDd6mcuYVoAF1nkPMsqjgLF
      qoKpfHupk3xaRNUnJToMKcYWqFzXUMhKWJkreB5ut+7XsDTbXpdqZT4f6Db1wzG2BBuAbjoP
      W0YSoGjmQFML/DweDMM4tT4Pg1p+IutO4syKw6ZYUzDZUevH0QT0NslIMRoDNlQdWYlHRnZS
      TDoj/NsHdSxMZdteW5zOYesgvieo7tPJE0iIAbiN6FIpp+S44dOytB8EzeytM1yUVAhgtNsH
      lWtqWxoE4GzZVN1om2SiTjgiH/1eG4pTZYJNpTCZk3FQaXe97pcbmOnYAhWy0qGHKt4EGBTJ
      ToQBqIc1XQAnstopTu8nfr1wgWNVmNsZJkgM4zLKumBVNyF45vkfe/I0w4p01gEcY9cipkQ3
      WyaQlbl8W7ozIQTVhoZ8x7aFY1NId2TlRiHIi5UIA3APwYCzzA5SZ9tZQ76VYwPwjhZ74TTY
      G80VgBB01coEgBRz3BIpShDMxWknG/5w2jaBadkQDyeQM6cmcHOzePR3VTfBcam2FA2XqXwa
      u2X/4JkX9YC6pokwAN20jrYlk1lpoMIYTTch+czssujkydgkXCLo4pRIHz0DMC0bqRTjacgc
      d7zK1pVwMYyLLEXTQJuWDTZ13FrqzKkJ3Nk5XgGqTc23F8HpU/E9QU3Vv7lHIgygdb89lZcH
      KoxRdP8Zz1ninS1QmBrMxUnjHsEocF1FPiN6Bi5bq0OEVcBuRYpYHc6wrDa3aiEjoqEeC3F2
      DupYnPGuTL4ym4+dFGea/m7chBjAcXi9kJEGGg1Wffr+AscZoVH94sChKmwEBTGVRvcB2KU1
      GtxQjNBEOJeoB35Vt9omGZ5jkZWPy0huH9SxOO1tAIszOezE9ASZNkm2AVj2cSuiidxgDcCv
      hB5wvMdVtPb+AUGMar9g1w/vRaGlQFZD1ZGWot2r6FE8zIu6h19+aSaPzX3nwd46qOHUdNbr
      vyKXFlFX9FjfqXW45fIiIQZwfANTucFugYLcoO4M5/qwo+DkSI3eFsgrCOaSS4tH9YGCoqid
      SEK0zNdKQzsS4rusLU3i5mFqdLGqYKbgXXSYY1OQBB51j77NXti2U9LL78yWDAOwjpcwtyL1
      oAgqAeg0vNAPG2hEeyhGtV1qqap0pUG4FLIiKoclaJSIugfA9XiFH4KdUiztxrc6X8CtrRJs
      Qg6lkP75PnOTGc8EOi8047jwlxeJMACzZQnLpr0b1vWLoKCPJLgrQHBV6E5GsV1qsab4boHy
      LeesmqJH9gKxbLQqGF6pCVM5GcWaAlUzwbFM4BlrNUZKRFBcB0iIAbRWYBB5R2M7qBk1KJ3b
      yesxoWgmJCGGAbSkUIwKxZr/NiOfFo9yrhQt+gqQYqJ1jPfaAokCB0ngsH1QC832XJkrRC6T
      ovoInI7GHOldOiCEoF5vwDZ1FEsV2KYByybQtP5vTdzZv9Xt6ESDB2MAQUVg3dIoTS2aIN5l
      FFcAtyaoF1n5eJvZCGiQ3UlUWWSlrnquPgvTWfzqk50jHbAfy7N5fLJxgH/9397An//iJu7u
      VnzPWW4ajR896QGKu5v4eOMAc3kJHAdUSwyMVBrZbA4LYn97RDk+3PYfym1AHSUbMw5eTdRa
      SR+mNTQUA0uz3tsHL+IK4+NEX3slqN5n/rBRBiHEiYxHHAvDINIWyKvyHgCcXZzE93/6Eb72
      0hOB/z8rC/jWN1/CXqmBD9f38X//+jq2D+p4+fk1fP5Tq23XNkNWsNhPELEt3Ly9jqZqQM8t
      Y3Emh/X1XWxXq7h8aaHvTfIUTQfPMm3N2TIyj3KtibTY3z5kDdWAyPs3veNSzpJaa2qQhInI
      ze94LgVF1SNdr2gm/sm3f4Jv/d4XI1Wd6AXTsp3Z2rZh+mwlLduGZVlOWgKLyPdKSHczwU4a
      qg6R7264d2Y+j/XdMuYn05E+b25CxtzEKr50cRVN1cC/+eO3cPnCYlt0u1JXkBZ5/980/Jba
      YVIsnn/hc9jd24PA2Li9Wcbq6hKWhBwqpSIW5mcB9K9Jnk10CDzX1nxtupBBpaljtc8N2QzT
      OfD5NnpjnIdFMyxkZf/meJ2kJQGqYUe6Xmvo2Dqo4afv3cPffvFc5LHHoaYoyGeCx+/IXB3v
      SZzGdxzLBl5vEwJVt5CRu6PQ81M5TOdlzE5kYzfby2c5ZNMCinUV85PHMQRVt5ALaGTY8yF4
      fm4Ok7On8MSF88gWppGThaOHv594RV0nstJAYgFNzUA6YFvFMI6bNKoYxiUdIyO0ruh44ckV
      vPHBxsByiNw0iCC8KsRFISxz1LJscCzj6WyQBA7f+MrTyGV66zX37GMLeOvaZttrNUX3FcMA
      CfACqYbVFXWdHFA0WD0U3/vhyCLDe4N1Igpc5ENwqabg1FQWlx5fxOvv34v8GXEo1zXfNAgX
      WeSc/JyQzjCdhE0Mhml3VYBwYRgGX3nubOA5LIhPrc3j6o3dtu13WCBv5A1A85htJ7ISKgMw
      gGbIgY9hHC9R3EOqU20tWuSyVFMxmZPwlc+cxU+urg8kilzyUIJ1UsiIKNfVyDlPLmHfi1vk
      bBBM5WQwDNomx0ZAKjSQAAPw6tdVyEgo+/SyOgmqEby1YRgnQNNUjUhiGJc4wvha0ykXkpUF
      PLY8hXeub0X+nKjsFuuY9okBuExkJewUG7FWOgCeeupWqk0tcnJdL1x6fBFXb+wc/TvxK4Di
      kZ3p+Kn7L45XNRNSyA8u9FDrM44wvlg9Llb78uU1/L+f3+hr0I8Qgvdv7eH8ynTgdfmMiO37
      tcgxABdJ4AMT1cr17iBYP3nu/CLeub599O+geAeQAAPQTavrBjKSgKZm9F0c7+ztg/ewEs/F
      zu6URS7yClBpHGdpzhTSWJzJ4dqd/VifF8TGfg3TBTn0sJrPiNgu1mIF/AAcdZv3w13hBsVM
      IY2mahwl84X1cRh5A/BawhxxPPq+P47i3ZEELrZ/Xhb4yNUS1I4Z6++8eB4/eOOTvhn7mx/c
      wwtProRW8MvKArYP6rFyngCnFGRQ2kf1sB7QIHnizCzevbELADAtfy0AkAAD8BOfC1z0dIif
      X9vAtTv7oW7FsLA54ATh4s6KUbMkAVf/fPz+C9NZpCUeN1o0s71CCMHVG7v49Nqp0GvzaRG7
      pUbsLVBYecSqRx5Qv7n8xBLe+nAThDgNVYLkq/2NJA0AVfcWn0ii05Mq7IEtVhV8/7WPcH51
      Bv/1L36NrCzg6bNzuPzEclc+fLQVgI+VCAc4WZJRVivnGtIlBv/NF87h+z/9EH/w9RdOVHt1
      634NEzkpUpWHfEbEXqkRfwXw6Kfcil8eUD9Zns2j2tRQa+oQODZQvjryK4CqG555I5NZCaVq
      uCv0netb+NLF0/jmK5/Gt775En7/N5+BKHD4w++93tbyCDjsIxXycKdFLvZDwaZSkapDa7rp
      6SM/uzCBXFrEGx9sxPrcTn7+4SY++8RSJCMqZCSYlt2DFyjYAOLkFvUKwzA4vzqDX32yHTqh
      jbwBNH0KUE3lZZQiNM7+xfUtXLqwBMA5O8wU0rjy7CO48uwjePXnn7R/VoQtkCzysbcFUfPk
      Fd2E7PH5DMPg7//G0/iTNz4+UQT8g9v7ePaxhUjXpiUePJeK7bIUBS6wXWrUzjon5fKFJfzk
      6nryDcCraTXgqJbKIQ+Dqx2d9pD+XXn2Efzio622vridB1Av0lL8MwCbitYw26+XLeAcSn/7
      pSfx3T9/t6cD8V6pgbTEx3r48mmxhwM/B9Wnm6dbaXrQKwDgKMy2DmrhjT0GPpITYvhUYJjI
      yqHBsKs3dvDptVOeSz7HpvBbX3gcf/yTa0cPlGHaoQGuZ88t4Mpzj8S4A7dfcPgWqFhTA12E
      F9fmIYs83rwWfyv09vUtfOb8YqwzRFYWejgE+8dJLIv4tirqNxybwmceXww974y8Adg28VT0
      T+XCC2S9+cEGnj/c/njxmccXsb5TOdKXRplZJYHDVEgaQScMw4BNpUJLOpZrSuB7MwyDb3zl
      Kbz65o3YuVC//Hgbz52Ltv1xmZ3IxN4CyYJ/caw45WT6wSvPr+HS44uB14y8Afh9aZmQKsYN
      VYeimZid8A/5pxgG3/gbT+G///jaUaebQSEFzIwu1aYWmqWZkQT8vS9dwH/603cjd2U8qDSd
      6toxD+9/8PUXItcFdZFFDoqPy1czTfDc8B65pdk8zq/OBF7Tw2gINtZv4RfvXMXd25/gvau/
      wvbmHWzuHmB9q38RSxfT8o7k5dJOhQY/3r2xi4tr86EP9eOnZ9BUDazvDKbBnwPTv60AAAT7
      SURBVIurYguiWA3eArl86tF5pEUOP+9I/fXjrQ838VzM7Q/gnHfiTwqMr6HXm9HllcOihzgA
      g1w2i829CnSbxbm1Zdy+tYV75T1c+fylvivCTMsGiA3TbH8/lnFKXuiG4ennfeODe/jGlScj
      KYu+9tIFfOfwcGlZg9HuplIMVN2AafrPwuW6gpzsr15q5WsvXcC/+qM38czaXOi24u3rW/iH
      f/dSZFXXSbAsEw3FW/1WqikoZIWhjCMq8Q2AEJQrVYgcB5Fn8PGtbSzOT2NmpYCNrV2cWXai
      jP1QhFm2I90TeO+HRuQ5EMKA61D9NzUDpZqK+elcpNzyRxanMFNIY7fUiK1Eioos8jAsEvj+
      umEhHaRIa2Eix+FTa6fw1kfb+OLF077XFasKRIFDISsPdIvnwlqOYs7rHuqKgUJGHth33Avx
      R8IwOH12De5XvtKiQZ6dDFbzx8U87BDvh3CYd9IZKX7vxi6eemQulrDi61ee6sm7EhVJDC8c
      69eh0o9Xnl/DH37vdbzw5LJnKXEAeO29dTz/eLTgV7/w3QKFqLMeBCN9CDYs2/eHBYClmRxe
      e+9u12HwzWsbeOHJ5VifNZWX8bc++1hP44xCmCzSLw0iiGxawNOPzuFnPsqx3WId71zfxotP
      r8Qd7onw8wKVasrA84DiMtIGoBsWhACvwdevPIXdUgP/9n++dZRspmom9ssNLM/lhzXMSMhC
      cOVkt2t7XF5+fg0/evtWl4vVsm38x1ev4ndfvugrQRwEKQa+MY+6oqOQGWweUFxG2gDCcrkF
      nsXvvXwRly8s4Z9/9zXc3CzivVu7eDLm9mcYhLVKUnuMkObSIj69Nt+lH/6Ld27jzMIEHl2c
      jP2eJ8Ept+LtAKnHLCk5DEbrKelA07v3950wDIPLTyzjH3z1eXz3h+/jv/zw/djbn2EgS8Gt
      kpyHo7f98cuX1/DDllVgt1THz96/i69+8cJQ9/7AYTl4HwdgUKeWB8VIG4BqhOfmuMxPZvGP
      f+fz+O0rT+J0R9fxUUDig1slBVVrDiOXFnFxbR6v//oeLNvGt1+9it/9mxdj6Zb7hVM6ptsC
      CCFoquZQEuHiMDr+KA8UzYhsAIDTaeTFp4Z74ItK2BaoVFcxETPFopVXLq/hX/zn19FUDazO
      F/Do0nC3Pi5+BXJtm4CQYHXWg2C0RtOBpluh+flJQQ7pbllraMifQCrorgJ/9cs7+OqXhr/1
      cWEOk906BUDDzgOKykivAGpAu6KkEbYCHNQUXDgTnLcSxm994XG8cnktsBz4MJB4DpphgmOP
      9/thLu0HxeiZZAtNzQgtU5IU5JD+WY5W9mQuQp5jBy44j4JX6Rin19jo/ZYjbQBaSKGqJMGy
      Kd9KzICrfR69GbIXHGF8uwFUBlwPqFdG2wB0y7dpddJgQ7pFKjHrjY4ynR4vQgje+nAT50KK
      cT0IRtoAFM3w1MgmkaBukablZM+O4h65FwS+XRh/Y7OEe/tVfHYE4zOjbQC6dyeRJOLIIr1X
      AKeT4cNxn4Dr8XIO/IZp4Tt/9i5+/5VPB5YneVCMtgG0dIhPOm5qhtc2yK/2UVKRDsvBE0Lw
      v167jheeWsH8lHfj6wdND986web6bRQbBuYnM9g7qGJ5cRoQcmjUG1g61b8mGVFE6kmCZx1d
      cOfD3lAMZEcsR+YkuDGP9d0Krt+7j3/0O59/0EPy5f8DwueSiyKVoIwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dimension Select' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGV0lEQVR4nO3dy24bZRyG8fcbO2lOTWgO9OCmpCkgUVGEEGKLuAVugDthyZabQGxYcAEg
      hAAJVhUIKqAHGkFIWmIoqRMfZ+ZjkSAq0ZpknIlj3ue3aBIl/6+fHT/yJJ2pQ4wxCjCVDHsD
      wDARAKwRAKwRAKwRAKyVEkCMUYP+cun/MH8S9uA+/19rlPYMMOjmsywb6XlJyvN8qHtwnz/I
      /c8hEKwRAKwRAKwRAKwRAKwRAKxVy1r43Q++0tafzcLzMUaFEEZ2fm8RSQMsMezbMOrzf3v7
      rdc1NTH22M+VFsBPvz7Qer1R1vLAgWV9/j2AQyBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY
      IwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBYIwBY6xtAjFE3v7+htV82lWeZsixXnmfqpanq
      9++rk6bK80xZlqnX66nX3tHm/T+Oa+/AwPpeFJ9nTSXjs1q5eFZffPqxmmFGtYUpNdOg8bSt
      hVDR1tod1Z65pK+vX9fK8y9ofHz6uPYODKxvAEllUq3GltbWE82eWdTFhXMKSjUTg8ayjjpp
      psWzFxS6LT1dW1baa2vi1Mxx7R0YWN8AQkh07eVX9j5YrvVdaGn5n/d54UmMCn4IhjUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgLW+1wQP
      4s3XX9Buu1d4Ps9zJUnxPoc9H2NUjHGkb8P/YT6EoFNjT36Yh1jCFexH8c1P01TVavE+hz0f
      Y1Se56pUKkPbg/t8lmVKkkQhhCd+DYdAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsFba6dDvvPe5fnvQLDwfY+x7Ft+Jn99/W3yFE3AbRn1+/22/FUoLYLO+o/V6o6zl
      gSPBIRCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsHT6AGLXTeKid3eLX+wInxeGvCY6Z7q79rPO1i+q1GtrpSrMTQY121MbPt3X5+Re1eGa2
      hK0CR6/QRfHt1q6arbZip6G7G3Wt1p5WL4zrzPySlubnVMLLjgGlOPwhUAianppSnu+9EN7s
      7KwmJyfUS1NNT45p64/tErYJlOPwzwChoqsvXtv/4LxW9t9beuRLeAbAqOC3QLBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALAWYgkX8MYY
      9eV3v6jZTQuvkee5kqR4n8OeV9y7H0IShrYH9/mYR4Ug7f3xeKUFEGMcaPNpmqpaLfS/tpyI
      +Rij8jxXpVIZ2h7c57MsU5IkCn0C4BAI1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1oqfafQfvryxrmbH+WzQqKioEEb3NhSZryZBb7xyufDfedxKC+D9j77Ver1R1vI4oSbG
      KyMVAIdAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsHbgAFo727p585ba3exfn+t2u0o7u2p28yPdHFC2A18Uv7mxocmZeWWtbd24dU8L
      S/OqJFPqtR7ox1u3dfW5Z7RW7+jSck3nFubK3DNwZA78DFC7tKKx7KG++faOlldX9PvWPe00
      drXdaOvCxZpOT09qZfWyOq1WmfsFjtSBA+h1WtrpVvXqay+pvrGpK89eVYhNLZ07q/nZ0+om
      05qbHNfSwlNl7hc4Ugc+BJqZm9ezc/OSpNUrVyRJK6tX9j/7yIN+vKoSXngSKAW/BYI1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoC1A18SeVgX
      Fk+rUh2grygpDLCBkzCvE7CHY54/NVbaQ6oUIZZwAW+MUTFGJUnxANI0VbVa/M4c9nyMUXme
      q1KpDG0P7vNZlilJEoXw5Io5BII1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoC10s5d/eT6Xe22e4Xn8zwqSYqfyzvs+RilqKikz5mIZe/BfX7vROegft+C0gL48LMftF5v
      lLU8cCT+AjeGivI3K9vfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dynamic Top N' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29SZAkaZbn9dPV9n11M3PzfYk9IrOyqrJr6J6mewCBmREZoRFhBhBBBAQO
      HLjBgRMIdw4wtxbhMBxgBulhQHpgmpnpGqG7K6tyi813d/PFzM3c9n3XhYNHZlVWREaGR5iF
      e7jr7xKSaap/fZ+6Pvv0PXvf+wTTNE0sLG4o4mUbYGFxmVgOYHGjsRzA4kZjOYDFjcZyAIsb
      jeUAFjcaywEsbjTXygEMw/hgdA3DYBo/wXxo92AaXERXnooFl8RRoc5nW/mJ6xqGgShO9rvC
      MAwEQUAQhInrTtrWaeleBVvfiwPo/Tq/eryP2+vl1u015B/4mx88/YqRP8F6wsM//qd/wd/8
      w99hLMHJQRVT7HF7/fYrzzspNvnf/uXGFEZgcV15Lw4giCKaPsYfClPJHnB4WsQXSaGO6hwV
      WnxyN8FXmSZOm8JPPrqHaHMx7jY4y7YJxSO060UGjgDaWMcUNar5I3ZO8rj8cUbVHN6ZBdYW
      Z9/HUCyuGe8nBpAc/PgnP6aW2yOTzeP2BfDYRerdEUK3Q1cQWFq7i99t/9Ysr10k1xrhs8uY
      pslvvi1Xi2fYXH78HifeUNx6+C3emvcyA5iGxt7OHs5gktWoh72DE2xODwFvC6fNjdcVxBAl
      XOEQAIFwCKdLRbL3sEngdMiosgM1LoLgwe9xsLOXQbXZ8djV9zEEi2uKcJ2qQfuDEUNt8pkF
      XdOQ5Ml+V+i6jiSKMOEgeBq2Tkv3Kth6rbJAtXafrePqxHV1Q0cSpYlqGoaBIAoITNgBpmDr
      tHSvgq0TcwDDGLPz9DG5ep979x8SD3nfSsfUhzx+/BTVFcTrUkik0kive0a0ASflFumZKHvZ
      Kv/jn/zq7QZgcSOZmAOIosKtW2uMjmrEQw42Hj9mINoIO3WqrT7dno5qd7K+GCNzdEognqCe
      PcQ7M484qFFpDbj38CPaR3tEVx+R9MhsPfmcp5UK3lACaVinUO1xbznMVwc1XE4HM26RYq2B
      4I6SnpnUSCxuElPJAundBs2RQaVYQhMVbt+9Q8AfIuxxUKvVMDEolkrYPSEWZ6PUa006zQrd
      oY6iigyHY0zTRHV6uXv3LsawQa3ZoVsq0TZ05lfu4LZJNPs6D+/fxaFOfhq1uBlMNgaQVEI+
      N4JixyYL2CNhvB4fkigTDPpQRBNd69HujfH6gnhsNgRBwO6wYarn57hm1yk8e8JWxUso6EMU
      RXw+P+PBEH8kgsPuxSaJqD4vsj7g6dYevnBiosOwuDlcqyxQo92j1OhPXFfXdSRp0kGw/uLn
      +gkHwVOwdVq6V8HWa5UF0g2TwUibvK6uI0mT/Z7QDR1RECdeCzQNW6elexVsnZgD7G0+oTvU
      CScWSMUC76RVOCswE5+hdHrEaamBZHdz79byS9+V3xz3Dc8OivwP/7uVBbJ4cybmAAMd7t+/
      y9Z2BnlUJ1+qE5+ZQXb46DXL6MMujVYHU1JR7R7iXolssUY8vUzlZIuRqbC2tsLB3j713oiZ
      +Ayd/pBEIkEul+f05IBwYol8NoOkD2kMRUStS/msgDsyy2IyMqmhWNwgJpYFGrTr/It//i8J
      J9O02m20YZvOWKJydkx/qJ9ngxYT+GJpHJJBsd7mo48fUjvLYfcGWZiNcHqYI712h2QseC5q
      GnR7PSRBpNPtYJjQaTdoDwQe3FlDdbq5f+8O435vUsOwuGFMbAYIz6R5+FGMg+wZGAaKzYnT
      6aRbO8K3tIjWriAqNpymAqYTn0vhqy8fE08vY47aKKpKbMZJZvs5pmQDwGG3cVZpYEoqQa+D
      7edPkO0evKrO081dfB4nCAIup2NSw7C4YUw1C6SPB+wenLC2toI44WDvVZxVW+znGxPXNXQd
      cdJZIP3Foo0J35Zp2Dot3atg67VKg3Z6AzqDyWeBNE1DnkIxnChOPgs0DVunpXsVbJ3Y1U1D
      Z3fzKbX2iLnlVRKR12eCsod7eCKzv14DYIwoNwZEgl6GnRpD2YfX/nov7jfK6O4I7hej+GI7
      b2WBLC7ExBxAECXW1td4ulMgEfGy+eQrDJuPeMDGaaGMboAo27h37zaiqdNoNuloKmLQxkG2
      yMJCiq1n2xz7fKzE7Tw5PmImFsNjM2g2+vh8KvlClYW1O5SOdxlgY9YFA9FBozcgFQ9PaigW
      N4ip1AJptRMIr+BXBuRqfVbX7yCrCiGXxMiAYeuMXKnDyfEhw9EYWZIwDJNYap6IQ2UsSiyt
      3WXcrlMqlphfXaFcbfHoowccbn4BaoiITaDW7/Orz74iHAlNYxgWN4DJOoAgYFMVZF+cTnaT
      s6ZGwG1HEARsNhuKoiIAZ+UOv/8Hf50Hq2n6GujaiE5vgKoqKKqKJEoc7T5DV5x4/EFskoDH
      LvH1V18TmV2n18yRa3Txuzz85JP7HB9lJzoMi5vDtQqCjwp1vto7m7judW0Jctm6V8HWa+UA
      mqYhTmGFkZUFsrJAb0y7dkZf8BANuM7/u9nA5fUjCtDvtBBsLuzKqx/SbGaHWmfE3NIKfpf9
      ux+aBmPdRJG//wH/i6cnVhbI4kJM3AFOCyVGZoOIb4XM3janpSa319fo9Jo4nR48io3tjU1s
      3ggBh0m+WCUQm2Um7KOnC9xZW+Tx1j7piJuzep+1tTkKRwVGwzqbuQ6/9zs/onCSwRNOYGNA
      pVInOrtI2Oea9FAsbgATfQEzxl1OCxXy+VO6jQKmJ0kqFqRezKN6owzbVbrdHv2hxs7eLq1m
      neTiOo1qAYBWtcizzR08Xh/dbo/22SG5epNKU2dlYY6FlTXGlWMC6XXapVNKtQYrywtUqpNf
      CG9xM5joDFAvF1m68xC/USHbMKmd7WCaBjPhCKGAm3JDYNRt0B2fBymiJKPI8reLF857ZcJg
      2KfTbKCqIoYhEAqFEBSFem6X6FKSw62nqKodr0NFkcSpBFIWN4NrFQTvnJT586+PJ65rmgaC
      MFknM01z4gHwue7kbZ2W7lWw9Vo5wFXIKlxEU5IkKwt03bJA39DtdlEk0AUbDtsrLmPqtLtD
      PG7nG+kN+l0UmwvphWO3223cHs93iik/387zx3/6+N2N/21Tp/BtbWJOvCkWTHNmmcI9uAK2
      Ts0BTnPHDPpD1m7fYW9rg8jsEka/zlm5yfLaKqo55PA4z/07y7RrJXKVDiuLSfK5PCNUZqNu
      9jKnLK+t0SiesHeU5eGjH3GSOSCxsELu8Ihbt9fY390jubCCx6EyHGlUmtbiGIs3Z2rRY/Zg
      E9EV4exwi1Krx9NnG+TyBRajdg7L3+3csH98SiqgkDk+otwWMHstCoUcgmJj2K1S7crMzUQY
      9XuMtCHPn2+fn7fxhGa3y7ON3WkNw+KaM7UZYHb5LuawwkCS8Xp8hMIhOs0KdpsCYxMQaFZL
      5Ao+RHNM7qyKK+DDlNzIwzGegI/OSYZCVaLbrNMzB7j6Og6Pl96gC4Dd6cR02AkGrWI4i7dj
      akGwpmmIgoBumgz7PRSbE0kEWRTQTAFZFOh02piCjMMm0x9quF12dB3AQMCk2xvg9rgZ9nuY
      goRdlen2BtjsNgRAliU67Q42hwtVkXiyX+Cf/OXkZwPTMBHEKbz/Ikx8Rdg0bJ2W7lWw1coC
      XZKulQW6GrZOsTGWSafVZGSIBHyel//QpsFgOAZMbC9aJH5zXq/TZqAJuJ0vSqhf94yYBiNN
      R1UUnh4U+Uf/anvyI5lWBgQmvj/AVcisXKbmRXWn5gDjQYut3SMi0TAel43TXJ7ITAq0HtVq
      k0QqQbfbBzQ6tRw7Rx0++tFd5GGN5/tlUvEI1VIOm81JZCbFoFmmZ8jEg27K1TqK3UPArXBy
      mKGNi3sraVrdIZtH5WkNyeIaMjUHkFUXDlmjUmsSD7rI57OcFFt4lBGpVJjj0wq9ehNBHDCX
      CuH2SKiySHG/wOKd+4RVga1yDl8gxNHxMcq4zfPtLP/az9bJt51I5WPKgk5sJk6vMZjWMCyu
      OVNLgxqGRjg2h8MYsL13SHplDUXQcXr8+ANeBP3XWxkpqh3T0DBNCCUjHO0cUK81UBwuAn4/
      stmnPhCYC/kYCSLhUBi7TcUwTExDQ9Ons+GyxfVnajOAKKkI5oBwepGwz8HpWZU7d9ZQJBFZ
      VvC7SnR6CksLKWwOB/HIEM0wsXtnWEmU6Y41Uqk0siyTSi8RbNbRSBIIuDAFGcORQhFN8qU6
      Sy92x3DaFWajb7czzeswzYm/qsN5JnjiTMXWKeleBVsvLQs06HUQFAe271kc8zZchazCRTSt
      LNDl2zoVBzAN44ULmoB4YS//xqSLPhybh0X+2eeHF7vYG2CYBuJUKiEFJj0NTMPWaelepq3p
      mI9/9/duTecVaG9jg9m7dyntPcOXuoPbJmIa+nmtf7+Panewt7PN3MIyNkVgMDZw2W2MxyNE
      2cagkaM89LKY9DPodTEEGZsi0e/1UB0uJEGn2x/hdtpotjqoNgcup51SvcvPHx9NY0gW14wH
      y7HpOQD6kOdPntAun7Fmc1JzJumc7eORdAaqF200olIsEo4neP7lEzr9IXOra5TPGjz46P63
      MsawwZPNY1RhhMvrRdcleoM+8qhFrdli9tbHjKonjOwRHq7NTWUoFteb6WSBJBt3HzxgaW4G
      QRDQtTHdbh/Z5mR+YQmbIhIIhQiHPIwNlXsPHuBSZZZWVnH9Rum0OR5i84bxO1XGyCRTSSTB
      oD8yuH3/IWGvHVPxcn/Vevgt3o6pzAAzs7OoQDieRnG4ae/tkkwvEPLaUUTOd3XRBhznaty7
      s0i+2mNhLoEgqgDY3QHauQPO5DQxe5eRnMA/rrOzvcPq7dsoWptMtsRsQmE07HGSLzGfjCKK
      wkSDaovri/qiu8gHUws0HPSRFBuy9P2T1lXIKlxE08oCXb6tH4wDvAkHp1U+2zyduK5hmIgT
      rlqchuaHpjttW5NhL3/90fxrj536LpG7G0/ojQxm5paJBT0vfV5v1PE4bfTGIq1GhVQyBYz5
      5f/3S+xeD0vr93DbXv7W397cYvX2re8EMdlik3/455vTG4zFB8Un64nLdwBBMDElG36Pna2n
      X5FvDPh4McCT/BiHIuJQYDHh57Rqsr/1FYZoJz3jQ9N1QMTUa/z8n++iulTSCS/FSpuxYMcl
      G5Rzh2SyeVyBBPfXF6Y9FItryNQb6swurnFrIcaTJ8/oDDUGvfPN7lZu3cfnVjExARPZ5mJ2
      bo7Z+PnqrshMmgcP7mGXRdKLq8wEvTR7Y+7du4NNOp82i8Uz3L4Qfq/VFc7i7Zi6AzTKBXYO
      86ytr+NzO0nPLeDwRfHYIBwKI5gmisNHyO8kFvSSK1YBEXPc5smTJ/R1G8Ggk0A4TCoaYmNj
      g4FmEo/HWb99B3M8RLXZpj0Mi2vKpQbBxrjPUb7KQjr5RtmQfrvO3tEp80sreJ0vP/T94YiR
      NvnKUE3TkV/TlPdtOO8OLU28GGwatk5Ld9q2ypKIy66+9thrlQU6LTfZPK5MXFfXDaTXpF/f
      BsM47142aQeYhq3T0p2mrUGvkx/fSv7gsa8Pgk2T4/1tap0BiwtJmgMn6bj724+7rTqyK4Dt
      hROXyiWikegrpWr5E9Ro+tsN7X4bQx/y/OlzDNXDwzurP2j4CwMpl8pEoufX3MtW+Z/+5PM3
      PNfiOrM6G3p3BzD0MY2hyaNHj2BQ5JdfPaeQc5II2yjVhgTdKu6gRiZzRHIuzZNffsb6w08Y
      1PL0xwapVJqj7DFIDua8sPusjtvpwS0OqTa7zCaj7B4XWV+/g9gr4kssMxfzkT/apVBtEYim
      qRf20E2J5fU75I8zaJIDjzCgPRrjcofY2njC/R99ynzy1Y5nYfE6Xjv/CIKAoeuY5nmuZm7p
      FmGPg6EOt+7eQdRGSA43XreDfm/M7MI8i7NBDNHLndVZKqU6ifllvDYJZBu37j5AFcccHh0i
      STKmPiY+t0LY70SSRMbjMaZpUm0P+OijR3QbZdyBCKtLSRqVKv2RRrF4hiA5uPvwHugmC/ML
      zCUi7+duWVw7Xu8AkkIy5Obx4ye0Rgp+t4rX78PnC6BIIp5AEMkco411bHY7Ya+LTLaO12mw
      fVRhNhniaG8byenB5fGjiuDz+VlZXkYQZWwu77f7BPuiKYxWgSebe6Rnwnz99RNis3P4fT5U
      uxuvx4Usy0QjETx+HwIiPr8Xn8fGSd5aCG/xdkw1CNb6XTq6gP8NG+C+K412j3Kz/8MHXhBd
      17/dw2BSGLqBIE4jCJ68rdPSnaatLoeN2ajvB4+d6i/BssOFf5oX+C003aA3GE9c9/wPNdn0
      qmG8cICJqk7H1mnpTkPz3mIMw9AvtzFWOX/M5t4RkViKtfUlftPHS8UiwXAEWRLJFwokZmYo
      nh6SLzWIpRZIRN7cZfInJ/ijAZrNMTOxIM8zJWuTvBvOP/pv/z0uUl83FQeIJObwV1vcXl8i
      m9mhXG8zu7hGKbvPaaXNzz6Webx/TF8zSczMUClXiM4sEAv5yBxmiPrsNIcCuVweXRthU2QW
      5uc4OMmTmp2lXshiqB7kUQ930Em7O2RmGgOxuPZMvxSiO+Thw3tkd5/jCMywPJ/gLHvGrUcf
      EX1RHXrr3iPMQY2N7UM6nQ7asE+vPyAyu4TH5WJ1eZZBu4PqixF2iXRHBmeneaxuQBbvytQc
      wOM+/8HM77Lx+PEzZlfv0KmcclZpEUtE2Pz6a/qj8/g7f5yh0ujiD/iQzTH7JyVcDgdOVcbt
      8SDLKjaHg5DPfd5oAvB4PLg8biRJxemwaoEs3o5rVQpxVm1xkG9MXFc3DKQJ70RpGMZUdrec
      hq3T0p2G5qd3Zi8UBF8rB+j0BrT708oCTToFeO4AVhp0cppelw2XXb0q7dG/D5NsZpdaZ8TC
      8hpe52uq9YwRG882afUHLK7eeeWKst/ki+28lQW6wfxnf+sj/p1P37SO7Jz37gDDRo6G6efe
      3TCmaXCwtYHkCTNql9BEF+moi53DPN5gjJX5BOu3b7G9nyHmguebW4QiUeqFLKIriEsaUmt0
      iKQWSYR/+EcPC4vf5r1vsT7q9XG6XWw//iV7uSKtnkHcZ5LNN2m16mROK3z04Bb9Tue7J+oD
      hqKLiFdlqBmcHp3QGRncv7NGu91638OwuCa8dwfwxBdoHm/Q12U8TgeBYADF7sPrkvB4fYQ9
      Kl8/2aA71IDzgjxVtYEgEQz4MEYDBpqJzW5DVVUEQURVlPc9DItrwpULghvlAoe5AsFYmrlE
      +ELnHhfqfLV/NnGbDN1AnPiCGBNRmPwmedOwdVq6k9Z8sBRnMRG4uX2BNE1DmEIKcBoNnHRN
      R5REqzHWBDVFQUAQhMvPAo06NTb2s3j8YZbmki+l+hrNBn7fyzU/pewR9kgKt2ywf5RjdXnx
      pWPG4zGKolCv1wkEAt/57C+enlhZoBvMH/9Xf4uI/2IdQqbiAP1ahcTaPSpbX9AM+zk9yhBN
      LmD0KtR6JqI5QkGn2R3hD0XotGpEI1HarTqlgcCsFw5yJVJRH3uHp6QXlxk2K/RHY5492+Dh
      J59ilw1KZzkq5RrR9BJhn9UaxeLiTCkI1tl+/oSOLpE72KQzGHOc2eOsPmR1Mc2wU+PpbpaI
      38FJLk+lXANAkF2YWpdSo08s6KLf66JrQ/YyGXKnRVJzCyzML5BORCgWz6jVG6ysLFKpVqcz
      DItrz1QcQBBEBASM8QiXx4dgQnQmgThqs71/hN0TYjbkoDKQGJUO8M3MvzhPIOaSqesqsihQ
      r9UQJQUBE38ghCKJGKMOJ4UygiAgKSqKJE6lpMDiZnCpQbA27PFkO8NH9+9MJBjcOSnz88cn
      E7Dsu0yjbmdqWyRNqcZoGrqT1vwP/sY93I6LlUJcuyzQh5QBsdqjX76tUy2FMPUxmUwGbzhB
      JOB56bP+2MBpPy9lbrfbuD0eBu02stuD8hbPxa+28vzxn349CdMtPgDW0mH+67/3s3fSmKoD
      ZPc3sYcWkQWDXqvKcaFOPOTgL/7qKT/+8X1yZ2V8L1KlzVIOTVrm9PCQ9fVVtvczpBZX0PpN
      Ov0RsqFR645ZX5njcG8XT3QWmzCiWCgSn1vG61QZjTWqrckvire4mjS7g3fWmGr0GE8vUMll
      qDc7HGWLzMUDGDY38/MLhLxOZLuHcb+FCURn4pydHCDYPBxlMswtLdFq1NnZ3iYUDlAotfEZ
      Yw5PdlFCc5wd7XOSzZJKJzktTP7XX4ubwVQdoNtuYWDSGwyxSTq7Rzlk0ca4X6PWGREKBnC9
      WDmmOv0MGxXiqQRBn4uNjU1MUSaeTONQZUKhIE63C38oSvFwG8HuxesL4LTZrBVhFm/NtQqC
      c6UGG0eT/03AMM47OU9W03ixPdCks0CTt3Vauu+qGfTY+eQV/T9vbBZoMBwx1ic/nOm1R59G
      LdD1bo9uV2WUHzjnvWWB2vUyh9kzFlbW8Ti+vyS5VC5hlxVcgQDfa7o2oFDrMRMNvrU9n23k
      rFqga85/8Xc+4d/4ZGliem/tAKZpsJc54f7DB6CPef50C2cggk+FUrNH3G/nKF9hcWWds7Mz
      YuEIcrvOwVEW1eknEbCTyRaYX7mFz6mCNuDkrAL6EL9LpTsWyJ/mMBHAMFhaWeLo4BBTcbA6
      F2Vv/5BwcgGzV6WnqyzN/3ArbAuL3+btg2DTRFJVZEkGfchQ0znIZCgXzkim0+QKVe7fXebk
      KAdArVyh3+0RTMyB1mN3ZwtDH3F2dv7ObgKiKFKulBl2G9SbTZyhJOgaC3NRWvU6kitCSOrz
      5PkOPd2gUChQOKsyN2u1xbJ4O97aAQRBxCHqfP3115ydVdFMAUWWcbq9OO0KbrvA48ebuAN+
      ZFlGkmVEUUJRZBRZJhgMYgoKwaCHUbfBl0+3iUXDaP02O5kssnR+rGqzIYoSkihQODkg29BI
      J4KYukk4FMQXCL5282wLi9fx4QTB4zZHpRHzydD3HnKQq/JXU9koewq1QMaLWqAJB8HXvRbo
      p7dTrKReHyfe2CzQVagtuYimVQt0+ba+l7YoxnjAzu4+M3MLoBn4/a/u79NuNXC6/bz0RqOP
      aQ80XA4bggiddg+Px/3S+b/YyPH3/48vJj8Ak4mv3Z2K5oem+4aa/+Uf/ZRP76QmfPFz3osD
      PH36lNV7jxDNHnsHJRi3yZZazCXjCHYnWreDLxQknztmftXPqFvDUH30Ow3cqsje/h6a6uf0
      YJu7H/+IUWfAONzH5XJxcJBhZm6JgNuBrhv0X3STsLg+6Mb02iC/n+hRtuFUFey28y5w3W6X
      bu2MQr3FyfEpheLZdwzp1os0+gan+TyZ4xy31tdxuNyk5xeYS0YpZffJ1/oc7mzQ7Q/Y2zt8
      L8OwuH68FwdwK/D02XPK9TYApXIFu92GKdqQh0VUTwwAfdhje3uTgSFyvLdJtdlDNMbs7O8z
      GusYwy65syqR5Dx068h2J7JqJ5mIv49hWFxD3ksQbJrmt0Hfi/+BYZqIpsaXjzd5+PEjFPF8
      R0pNP+/s+81O6qIAmq4jSTJgYJgv2l8AvGiBIUkSoiiycVjk//lVZgr2n29qPVlN80UCaLIv
      1tOwdVq6b6r5N39nlbXZ78/+/TZWFugD0LWyQFfD1olfvV6r4vUHEcwx9UaPUOjl/j+dTge3
      +9dZHNMwKJxmGRois7NJ5DfMDWvDPoYko40NnA4bX+2d8b/82bOJjeVb+zARJv1NzbSSNZO3
      dVq6r9P0u+38d//J70/0eq9i4g6Q2XpMeOUTXMMCj487/M79eY7yNVZXFul2WgzHApKgY4x6
      5GtdVhbnEbQB1XaPdDJF5eAxj89MfveTuxROjoinFyhlD+gbCnOJMMe5IsurqwyaZXaePSP1
      8c9wGDpOh41ef8RxsTnpIVlcAp3+6L1cZ+IO4I4k6FUL9NCJeVW67Q7depbNHZlGvchPfvwJ
      u9vPCXldlI/2sfnCzPkkaqUChimwHvOTUIOUDjfI10fkql0+fbjM3lGJfrdNp1Fic9sEQ2A+
      NcNg0KHUGuL3Wo2xLC7O5KMlQUIWBgiyA4B8sUxsJoYxHBFLpLApEmBQLNWJR/2Mx+c5Xm8g
      RDwSRlRtdOoVkFRiM0lury7w7Mkz/EE/+XyJWCyGqY/QtSHV2uS3Q7K4WUx8Bpifm0dCRxdU
      TF0DY0xvpBGLO+DFu/3Kyi0MbcRgbOD2uBEkgdmZGGPDQHTPsJ6q4vHP06zXcDidzC0uoguw
      emudTn9MPOlEH/UZjA08Xg+m9zyO97psrKcv1lH6TTjP2Ly/99930p2CrdPSfZ2mz/1+lrla
      WaBL0rWyQFfD1ne+uq5piLKM9qJr8xthmvR6XXRTwOVynvfJnwCbR2X+z7/am4jWb/K+v/1u
      iu7rNP/uH95lKfH2qwPflHd2gOxBBl/EQ6GmMxdz0xuZhP1uuoMRoqQw6DSwewKI5ph2q4M/
      FEZB54svv2R2fgmHXaVcrRMMhzHGQ4ZjHVnQafc1gj4XpqhiaCMkDKrNHtFoiEa1jN3tRxIM
      2s0WnkAImyJRa/X5fDs/ifticcn82z9deS/XeWcHGPVbfP6swh/87qdk9zbZ3Dvhpx+t8MVh
      n3spO893s6A4iXlFgj4vhyOJ1Rkvo+GAbrfP3uYTirUWzuAM41qJ1Qd32N/PIkkjxk0X48AK
      7fwuijZAcwQQx03KA4XhyRaypBEKhChnh9xanJ3E/bC4YbxzFkh1eLm3MsPhSYFaZ0Q67Geg
      6cwtLSMLBsmFNR7dXcXu9pGaifBNyBFJpLl7awVdM7h9/xErc3EiMylCPieyzYUqiwiiyGjY
      p93pkZhfxj6sUKj3cbq9SIKJ4nCTnIkiTuMXJYsbwTvPALFUEpvLRavRwKeE6OsyoYgPn6Di
      VFfoHx6g4SaZSIGqkIoAosRC+vwb+/b9B+ztZ5hJL5BMzSAIDlRanJbbzK49ZHCcYWllDVk0
      MFwz3FtKkzs8IL28hioaINlIxSIAqIpE0Ot41yG9jGlOfOXWVDQ/NN3XaKpTaIl7etoAABP6
      SURBVO3yKq5cFsg0TWrlMwzZSTjou1Ci8CpkFS6iaWWBLt/WK+cA78LOSZl/9eQD2R/AeJEB
      mfQukddgTfB//G89RFXefga4YksiO/z8z77C5ZNJLt/BhkmhkCUV8dIWgsyGFX7xl1/i8PmI
      ezwI4TAhpx1JEBhrGoqiYOg6ummivEi3irLM3sYmi3duo4rC+Zajokih0uZPfzH5NKjF++U/
      /Bv338kBLsJ7WRJpmiaGYaIqJvnDMogGpmliAggSigR2lwdZ1MhkDjgxBLyqzsgAmytEOX+I
      KKvMJ2LsHOdQHD4CikAhs4U7vshZNsedW+8nbWZxvXgvK8KS8yusLiRpNFsvf2jC+sOPUQZV
      Ki2dxdU1/C6VoWaytrrMsNsmPJMinYrRrFTxRhLMzkTPdReWOHjyOf6I1RjL4u14DzOAjXG/
      xKnmYGVtgY6jD8IYp8OGjA0EgcLxAaY9RDoSRFRk5GgMRdDZ2TtheW2FYb+PIkEkMkNmfw9R
      DjCTTCCKNmS7k3jo5Q4RFhZvwgcdBA/aNZpjmVjQC8BY06ayHHAqO8VPrTv05WdW3lVTEoV3
      ui83Ngt0fFbn673ixHWnlQERRHHi9aAfehYo7HPy1+6n30n3imWBXk3xZBd8aWI++8sfGkM+
      ++xLHC4PiytJSmcawYCCIgioPh/qi2+Hw+MjFubmvz3tMF/nf/6/H7+nEVhMg7sL0Xd2gItw
      aQ4wHg0Z1isc7RZAspMOuyhWa/hjC8zHXIxGYxwuEVHQGQ3HFAplfIKE0+Vgf2uLvqliFwc8
      fVxF8ca5tWi1R7e4OJfSVtk0TUzDoNdpk16+jVuGzPERBhKKdP7tHkst8ODBHdQXU6Suaxia
      xqhbp94dUy4UEexu7t+7i2hY3eAs3o5LcYBy4YSm7uLW+iK13D52f4h7t28jiiJ2uw0EmXG3
      ypMnzxiZNkIhD5FIFA1QbS7cTpXZdIpQIAiCRDDgu4xhWFwDPpwg2Bizu3/C8sri9y6g6fQG
      tHrjiV9a17UXjbkmqGm8yAJNOAyehq3T0n2VpqpIhH3Od9K9sVmgYrXNQWHyC+V1Xf91V7sJ
      YbzYH2DSadBp2Dot3d/UVGSRT9YnE8ddUhbIZOPxl2iCQnppnYDbRil3ij+VRH2Ds1vVArii
      uIUWJxWBGa9GdaiSCHtfOjZ3ekoq+fLN2jouW5vkfaB4XTb+wX/zd977dSfqAJoOoVgIu6zz
      1eef02kPSWgDZoJunu41SIVUHE4b2dMC0WSa8vERvpk0vUqWRrvD+kcREIYcH5fQfWM0b4on
      X+6gCQpzszGOTvI4vSEkc0g2s4/L42DnsMj84hIzYSsOsLg4Ew2CJVnBbrejN3J45x8wn4zi
      s4k83inidRm0B2N6rSamYXJWKqA4/MynnIhqnLWlX+d+VdWO3W5DGFQRfGnSUSc7mVPW7z1C
      H7ToNcuc1gf4vD7cdoVBvz/JYVjcICboAOctD09PTxm7ZugcP6XSHeKPJXDIIumgE9UTQpJk
      JFnB5/ERDPoRcINW5OSsgSoJINlJpeJEYjN4QymUXp7TmsaDW4vsPn+M0xchllriVjpIsdae
      2s7oFjeDaxUEVxodcpXOxHWnEgTrBqI4+U3yPtQgWJZE7i5EJ6L7QZRCTANZEnE73iTkvhi6
      piNNeI3qtIrhpmHrpHUjPic+t31qhXsX4dId4PT4mEg6/W19T7FUJBaNvXSc3m9Q6svMBL+/
      9Pnx3pmVBfoA+M//9sfvre/PD3HpDlAtl3GHvDzbyeANxRk285ydnhJKLtA43WOgCdx+9AnK
      sEujYyMecJLZ3aI9EllORdg/zhKKp5mNv/kOIhYW33D5W6yLIqWjLMsPP2LcqiE5vTy4u063
      28Xm8rGe8lL/jSSPPuxylM0z7PfY3NsDQaDdbl+e/RYfNJfqAKdHewwFldRsnN2vvwK7B5fd
      DoKI3aZit9uRVDuqBIKsUsruky23CQd82F1uFmcTjDUTj+fV+w5bWPwQ1yoLdFpqsnFcmbju
      1BaDCJPPAn0IC2JuzYWZjfquxOq1a+UAg+GIkTb54Wi6hjzxQjAdUZp8Mdw0bH0XXVWRsKuv
      Pu8qOMA7X900dI4y+3RHJqtr66ivyZQNBgPsdjvGuM/z51sMdYN0aga7P4HP/gMPgqEx0Pje
      mwnw2UbOygJdMf7o927xH/2bDy7bjO/lnR2glMsgumOshxzoox77uWO8wTjl0xPsvghueUSp
      2iQQjfP4V59x9+OfMp+Msbac5qgywCd2+eWzTeIhD3GvwmGuSHpplW65gK66GbXO6I1F4j6J
      z7ZL/O6nH3F6eIA7nMBOj2qtRSS1SCxoxQEWF+edX+r6wyE+t8qXf/EvOGsM6OkyIbdEf6xz
      cJih2+2zcusO3XaL9MIC88mXc/yzi6uYWp+TQoV79+6SO96jVG0zm4iiCwrpqBPBHmBhZY1x
      5YToyj0G9SLVzoBba8vUG9ZeYRZvxzs7wMxMgu2N56C6sCsiwUCAcbfFyBCRFQVZUZFEAUWW
      kfQhh6clAARBPG8OK8qoioQiy3jtEo8fP8HlC+MPBpFEAdVmQ5JkRJuDVuEQ0+nj8Plj+qaC
      XVWRRBHlPXUStrh+XKsg+OC0yi82TieuO5UskGkgTqGH0VXLAt1diPJwJf7Kz65CEHytHOAq
      3NCLaFrt0S/f1gtdvdFo4Pf7v/33xeVoNPr4/a8OQpuNBh6fj7PCGYmZKI1mF7//5VVek+Cv
      NnL8/X/8xVS0Ld6O//4//X1WUle3TOVCDpA9zuL3+znJnqCKBplskeWVWbLHRSSzz0mhztJ8
      guzpGYLiZHk+SfnsFNkus/N8C49b5qyu06rmGYpuUhEX+5lTFldXyB/u4Qon8UhjTooNluaT
      VGt1ZEWhXqkhqSqDwZC19VWO97ax+WO4FYNSsUwsvUTA48DQDQYjq0XKVcIwrvYLxoUcoFU7
      48kTg1qnz+DpUwRF4TB/3tnt6dOnyIrK8fEI3RmHfgVIEvc7yexmSN9eYX8/T2p5hfJhgXwh
      i8gcyDKjQY9Gq48rZPD06RNk1U5WMqgNRB4uuKk5IjQqGZYiXiq9Ib3+iKPTLWZm/KwsLJAp
      lAl43l83MYvrw4WiGm8wzoMHDwh5nbg9buwuP7Hg+Vpcj9uDyxcm5HPhcDi+Xejgjs5weFRg
      PhaiVCrhc+hUGgNURcTm8KL165RqXZx2lZNcAbfHg8sXIuRzEolGEQQBm2rDZrcjSxLjbp3W
      0EQWRUTVhk2RzheWWFi8BRcKgr/JBJy39ABNM5Bl6XzDY0AzDOQXD75pmt9mDXRdRxJFdMNA
      lEQMTQdBQBSEb8/5doHIb+l8w/mmygACuq4jCCKCAKIgYHD+78ZhkX/2eWYyd+Y3r22YCBN2
      smltkTQNW99F9+/+wV1mQq+OD69CEGxlgS5J18oCXQ1bf/AoQx+Ty+XQDQhG4vjc378N6aDb
      pFCq4Q9FCXhd33ucaRoMhyPs9ld0hga0UR9TcnDRbaK+2i3wD/7f5xc76Q04n30mPAOY5nkh
      3MR3Hp28rW+j+/f+8B6f3klN3I5J84MOIAgSAY/MxmGXRFLmJLOHM5jALmmcFc5we9yMUJmd
      iVA7O8UWSLK3vcnHj+6xt3/M/PIyo1aFSs9gIRXlaH8ffzRJrVomEgpiV0UyJyVWltOUS0V6
      Ywm/2CTXUZmJR3GYfbKlFiuLKXojE1Ef4XA5ONw/YGZ+GXPYo93rMxOP0RuMOSk238d9s/gB
      uv3RZZvwRvywA4giHrcHpxP61SPG9gj5ox2QJNLJOHsnVTyKgDkTwdBGZDMHmKLKztYW6aVl
      drY3qeRyCBK06kliqUVsEhztPkO49zuUM08xBZEtbUTfkLCLY3wecAUilPInhDx2amdHHApj
      epIPtVtBFEeUO2Py9WfY9Q7rj37yPu6VxTXkQi9gkqzSqdTQDQG7w4HTpuLxuJC1IQCiqBCN
      hyjnc8iySrVaRZRVvIEgyfQsxqhLq17DEfKRSKXpNGrYnB4iM0k8dolCBxi0EEQDr8eD1pIp
      FCvEIiE0E3qNKs1mndRsiKg7RtDrplYu43VOvhOExc3gzYJgU2cwMrCpMs16FcXpRRFBkSVG
      moGAiaKqjAddao02Lo8Pl12mWmsQCIbQhj3a/TGhoI9mrYbD40fEwDQMJFGg1mgRCAYwTcA0
      kAQwJRVDG6GPh/RHBm63i167AbIdr9tBvVrF4Q0gCyaqeu4AX+2c8g9/vjXxmzS1GOAKvKtP
      S/ePfu82P1pPvPaYqxAEW1mgS9K1skBXw9bpt0UxDdrtDpKi4nDY3yjpYRo6nU4XUVZxOr85
      x2Q81gETRVFeed7mUZl/8peT3yneNI2J7z75m79rTFZ38rZeVPdf/3iBn92dnbgN02D6DjBu
      8PnX+4Q8kFx5AP0GLl+AjaePmVtaxeuQafbGhHwehoM+KHbol3m6ecbC0hyiCKosoZt9djbL
      mGKXe3fuUClX8IbCoI0YjDR8Xg+1Vp8vdvJTH5LF67k9H75sE96Y99IYS9c0DEOmktslV6gi
      qU5UYYQsS3z5y7+iOxgxu3iLWqPJo4f3MTHpdzv0hyMqu3kWEgEqg1/rne5vspOvoDpDqKMG
      c+v3sZqjW7wN78UBgpE4d27NUjreZn7lNgGXSu7kEKfDjqi6+dGDNbTeAG8whEOV6fVE5ldu
      sZSO8LhapN1sodt+XUI9Hmssrd/Ha5OolBzEw/7XXN3C4vuZvgPIHlYXnaiKQnLxNseZA0xP
      grXlBQrFKvfvrpEtNplPJzFfvGPaXEEStvN34/nZGPWeRiIcRvcZgI7baSeTySC40iRTv840
      qIpMyPv9v1RbvB8ctlfHaFcRKwt0SbpWFuhq2HrpzXEnyUG+zs8fn0xcdxrrbM+zKgKTzgJd
      9prgv/2z1e+t/ryKfMcBTEPn6y9+ieDw4bfZCM6mcKkqogC6btBqNQkGAozGY2RJ5PA4y/z8
      HBg6piAhiaCNdSRFJnOwz1x6DllVMXUNAwHpRSm1KElUjp6y13Tzswfz/F//65/w+//+H6GO
      RkiKgoCJoRvkcsfEEnP0Oy18gQCGpiFIMqJgMtZ0VFlmOBohSTKKIlOotPmnn00+DWrx5vzs
      3uyH6wB6r4gaXOHucoTc7iaHmQNMXYJhHXsgwbjfZNAocFwdsbqQYmd3F5dDJXtaxNR0EjEn
      xY6ECMh6i/3tNnIgRimzz0AzWJyPU2xoPHp4F0G2ozCifnaMNz7PeNhm48un6HY/LrOFzRul
      cLLPWHDSa1fptyuUmmNMRGx6m0q9SXr9IY38Ppojxid3ly7pFlp8yHxnThNtHgatMuPxGENQ
      WVlbw22TcHpDrC/PARCIJIn5ZJoDkUQigc8u4o0kCbtVxoLCwtIyEgZ2t5/ba0uYoy4D08bK
      8iKyrHLr9m3s8vllwz4nz06aJAM2mpUirlCcQbeN3RtkfXWZWCzGXGrm3DhZZXllDbddotnu
      M7+8it9tR3UG+eiO9fBbvB3fmQFE2c1C0svO/iGz8SiqKBKNRTE5f1NNJpOASX8ssRD1Yzca
      tE0XTqOIHojjHFfY3d5mfXUZwRiC7CAWn8WjyLTGkIpHUdTzh98diOGxObHZHHhsErJTpdvM
      sbK8iMdlA2AuPcvhcZZUIoHdpqKqEtFYnHjEz3G+itftYDDok82XmE9OZn8pi5vFRLNAw14b
      weZ5bYPcaTIej5lGSkvXDSRpwo2xdANBFCfdHX0qtl5EV7zAgC47YAcrDXpputPaJO9DugdX
      wdbL3yJpgkzj22RautMoWYYP6x5cBVuv1QxgYXFRrtUMANBr1djY2mWkGTSaTUb9Ns1O/4dP
      /C308ZCdreeclmo0mk1MU6dcqU7AQpNC9pjOYEyj2WQ87FJvdd9ZtVUrsrG1x3jYo9Ed0apV
      GL7jbjmmPmZ38zm5YpVOu4mmm5TL5bfXMw2Kpzn6Iw1t2GVjY5PuYEyz0cTQRlTqb7ee29DH
      nJzkMIB6Oc/zjW2G2ohmo0uvVaMz+P5ugdfMAUwOMicsJHzsH51RLBbY3dnHZrddWGk8GpJa
      WKWUO+GsVKR4csDQfPf31WGnzv7BIa3eiGLxjN3tXWyOV3fHeHM0Nrf2CQZ8iMMmhUqVg2wJ
      VX6316xGbh8xNEcpe0S5WqaUP6Q5+OHzvtfKUZ9cNkd7oLG3t8/8QpqD/QzFYpGD3S1k9e3q
      uNqNOtlcHhMwJTuzYSfZswLFQoXt/RMctu//u107B5AVO06vF2E0pHx6xEB0fPu7w0VQ7Q5O
      9jaZmVtE77fYPi4TC757U98vv/gSSTIplWvUilk6hoLzov1fXmLAaCjTaxQp1NrsP3+CN5Z8
      5yILxe2jfLyDJsiYoz5Pto9Jzbx9rb9ic5GIhc7tkmRcTheKpNOplzlrafhcb7e22xeKftuu
      RzQGHFX6zM2EOM08R/ZEkV5zI66ZAwgowoDPf/UYdyRENLVEwi2QK198aj3bf85Ze0yz0UB2
      +Pj049tsbu+/c5r145/+NdKJOEG/l1B8jvmgjeOz+juqunC5xtSaPew2lbVHnzIsHtAZvluj
      4GF/iCRJ6OMxqE5+92efsPFs463vwaBdY2f/gO3dfTx2ic+/+ALR7scTjHJ/KcruYeGtdEun
      RxwdHXGYLfDVl19hjge0e0NSK49waWWq7e+ftqwg2OJGc81mAAuLi2E5gMWNxnIAixuN5QAW
      N5prtSLMwuL1mHz2539GF5XlW4+Yi/utGcDiZlEuF3H646RiPr76xc+tNKjFDcI0GY5G5Ld/
      yZOSSSt7bL0CWdws9ja+plQf88nDR+yZA2sGsLjZWDGAxY3m/weQYyGyq1+zAgAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='167' name='Measure Select' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Multiply' width='192'>
      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
      7/8BXdnl+WKpK8oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1' width='192'>
      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
    </thumbnail>
    <thumbnail height='25' name='Q2' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAC/0lEQVRYhe1YMUvrYBQ9fjwJaop0STI5SAv9AR1cu7gohU4ugmsRVAriUMRARykI4uJY
      dO0mSN3ExYYupUMLRQRFaCKk0KSREPLdN71CedbGl/fI8HrGe+6953BIvnxkjogI/zFY1Aai
      xiyAqA1EjVkAURuIGrMAojYQNWYBRG0gaswCiNpA1JgFELWBqPEj7ALHcXB2doabmxsAwObm
      JgqFAhYXFyfONJtNXF5eotlswnVdCIKAjY0N7O3tIRaLAQB2d3e/5AHg8fERp6eneHl5wcrK
      Co6OjrC2tvYtHVAIeJ5HqqpSsVik4XBIw+GQisUiqapKnud9OuP7Pp2fn9Pt7S3Ztk1ERKZp
      kqqqdHh4SJ7nke/7X/JERK1Wi7LZLNXrdfJ9n+r1OmWzWWq1WoF1iIhCBdButymfz5NpmqOa
      aZqUz+ep3W5/a9fb2xvt7OyQrutTed/3qVQqUbVaHeupVqtUKpXI9/3AOqHOgE6ng2QyiXg8
      PqrF43Ekk0l0Op1v7Xp9fcXy8vLYIz6JtywLuq4jnU6P9aTTaei6DsuyAuuEOgMMw4CiKL/V
      FUWBYRhT5znneH9/R61Ww93dHU5OTrCwsDCVtywLnHOIoji2TxRFcM7hum5gnUi/AowxiKII
      RVHAOcfDwwM454H5v6ETKgBJktDr9X6r93o9SJIUaMfS0hLW19dxcXEBTdPw9PQ0lRcEAYwx
      2LY91mvbNhhjEAQhsE6oAFKpFLrdLvr9/qjW7/fR7XaRSqW+tWt+fh4AMBgMpvKxWAyyLKPR
      aIz1NBoNyLI88Rz5TCdUAIlEArIso1wuw3EcOI6DcrkMWZaRSCQ+nTEMA8fHx9A0bfSuDgYD
      XF9fw3VdrK6uwjCML3nGGHK5HCqVCjRNA+ccmqahUqkgl8uBMRZIBwDmiML9Fp92Efr4+ECh
      UEAmk8HW1hY456jVari6usLz8zM8z4MgCMhkMtjf34ckSeCcY3t7eyL/C19dhILoAAh3EQqC
      +/t7Ojg4IMdx/rXUH+EnmeM8zWXjXhEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      9v8B/VY1gXW8aGoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      /sS+ypK01GrMur2MzSxwrqmfOdciR56Ik8eaty61889/ZT/X20f50Yd3+fapXbI4QSgs8v8u
      tPJPvr434t82N8PEnMvLvHuRlKTYJVqLfJtUSy6LHR2kZGQzNj6OEPLjdrnYVduA1TaFJTUZ
      NUQlhrvZMc6BHfmybsKn0cDXjlbx8a0+fvPletnKXY3RGRdqlYqczPUN5LVaDSnJRopz0tld
      msWf/fQqh3cVrtllkIPRaRdhUaLabqWqyMrblzv4wbt3+P5re9Bpo7v/x7e6aKjMJWuderET
      DXYu3R/htSOVUd1/NSIXwwlqKqtryLamk2WzkVNgp7GhAZ0aMrNs6xhMrEwwFKZ7ZI6qwsia
      yPWww25lYMKBxxufjBKfNQ+uOdBbC3OSnvqybC7fH5LJqtV5+3InXz1YgSAIqFQCXz9aRU2x
      lT//+2ss+oIbLtex4ONqywgv7y9f97WHdhZws30kpvKWDW2TGovkuEOTTuw5FjQa+QeCGrWK
      fdX5cVlM7w+G6ZBp8Pbi3lLO3+mP+WKR0WkX7kU/FQUZj44JgsDJxhJe2FPCn/306oajaT85
      18Lrx6o21IrotRoKsyx0j8xt6N5rIUlS4oRBb7SPcrAmdlrw5+qK+Kx5EFGMbYrk1bsAAAxQ
      SURBVBjyQe8kFQUZ6HXRd+NMRh31FTlcvBfbmPjblzt55VDFiv39vVW5/Mrxav7j/73G6Ixr
      XeX2jM7h9QWpL9/YpCbAC43FnLnVG5Pw8YW7A4nhAGFRpGNwhhq7NWb3MBl1lOam0dI/FbN7
      SJLEheYBTjZG1/15kpf2lXKheQCvPzbSjvFZN44FH9VFz372NcU2fuerDfy3N29FnJ0vFBb5
      ydkWfu3kzqgG0iW5aUw7FvF4N94NW4lph4czTX2J4QCj026slqSYD/ZO7S3h45s9MSt/xrlI
      KCySnZ4sW5kmg4591Xl8erdftjKfZKnvX77mS1qUbeGf/+oBfviLuzzom1yz3Ev3BynNSyM3
      I7pnIQgCh3cVyNp9DYsiP3inie+90pgYDrCU+Coy7X805FtTECUYm4nNrpYX7w1yZHeh7HHr
      U3tKuPJgGJ/MrcDk3AIzjkV2RjhesVpM/ME3D/P2pU6uPHj2C7ngDXD2dj+vHa6U5Vkc3lXI
      lQdDsnVf37rYwa4SG0VZqZvvAKIocb93krqy1Zc+yoEgCJzaU8KZ272ylx0MhbnbvbSGWW6M
      ei0Ha/I5d0feVuDty528erhiXbPkKSY9//KNQ1xvG+EX17pX7Jv/7NM2Xj5QhskY7dToEslG
      HbY0E33j0cvcu4Zn6Ria4ZXDn0e8ZLAvKqadSxMd8crqsKvERtfwXFShvZVoG5imLC8dgwyD
      35U42VjMlQdDstk9ObfAxNxCxLX/kxh0Gv7ZL+9jZNrJj8+2PFUzD006GZ1xcbBG3gm8U3tL
      OdcUXQXg9Qf5mw+b+d1XGx85/aY7wK2OUQ7ujN9sp1aj5tBOefuUS4PfQZ6rs8tW5hcx6rUc
      rS3ibFOfLOW9d7WLVw6tr/Z/Eq1GzT/8agOCAH/9fhPBUBhJkvg/Z+7zLZlmkJ+kPD+d4Sln
      VBXADz9o5pVDFVgtjxUBEX97SZIY7Otm3rW0aHlxwcHk7DyLbgddXV34NhCrXlr6OEF9HLo/
      T3J0dyEXmwdk61M6Fnw43D6KslNlKe9ZnKi3c6NtNOoU8TPORUZn3NSWrX/R0ZOoVSreOLmT
      3MwU/uLNm1xoHiAnw4w9Wx4t15OoBIH9O/I2nP3jZvsogsCyUHvE7XXIPYFoymZmapy0lDLC
      YXDMz5JWWEBGio65eS/ZmUmIohix3sOx4EOjFjDq1bLqf9bCZNBQkJVCS98kNcXRh14v3R/i
      yO4CxBgvyNeqBY7XFnLmVh+vHFr/zOpD3rvSyel9pSBJsjz3l/eXcjlJxzuXO/i33z0es+dw
      ZFcB/+lnNzheV7Qu5fGc28dbl9r5w28dWWbbOqQQKsRQCOnzWjPZbEYA3PMzeEkmx2pCEIR1
      /d3qGKOuLHvd18nx99K+Ms409UVdjijB3a5x9u/Ii4vdx+vsNHWO4Q+GN3T9/IKP4SkXDRU5
      stp1dHch/+77pzAn6WP23VNNBizJBkam3RFfAwJ//d4dvvPibkxG3bLPI24B1Mk2DPMDpOTl
      MzIyipoQoWCQQDgJj3sOT2oKyZ/fQBVBv1KSJG53jvP91/ZEdL7cFNpSCYZEZl3ep/qE66Vr
      ZIbsDDPJxvhsDavXqXi+oZi+MceGBrAf3ejl5QPlaGIw5xKPn/FkYwmf3h3gN0/XRXT+e1e7
      KMlNo7poZVn1OloAgbzCYswmI/n5eeTkF7Gjupqc3FwqKyse5XaJFPdigFBYJDM19km2VkIQ
      lrQuZ25FN6g8c7svauHbejm8u5Bzd/oQ1ykPmHN56R6dWzPbXiKzs8RG59AM/uDacyL94/Pc
      7hjjV57bseLLD5sYBbrXO0HjBhe+y0VdWRatA9MbziDh8viZcy5Smrc8u0Es0WnUGHRaWvun
      13Xdmdu9vLS3dNNXnkWDShDYV53HzfbV13v7gyF++EEz33+tcdXvuylPQpIkbrWPsT/OiVC/
      iFajZm9VLtdbRzZ0/fXWEfbtyEf1jNollrx2pJJ3r3RGHMlyefy0DcywN8Jse4nMiXo7F+8N
      riqQ++m5Fk7U28nJWH0NwqY4gC8QwrXoj+sKrWfxXJ2dz5oH1t2dEEWJq63DHIqhgnU1stOT
      sVqSItLlAHx4o4eTjcVxWVwTa9LMRrRqNRNzCyt+3twzwZzLG9G8zKY4wL2eSXasoj6MJxaz
      AWuaic7BmXVd1zc+j9ViIjXZECPL1uZrR6p453LnmtkT3It+Wvqn4p56PJacbCzmzO3l4zen
      x8dPz7Xw27/UENFkXNwdQJKWas59OyLP+xlrTu8v55MVHuZqXLg7wPMN9tgYFCG2NBN5VjN3
      10gl+PHNXp6vt0e9tDGRqC/PoW1gmmDo8TyGJEn81bt3eOPkzlXzDj3Jig7gm+3nytWb/Pid
      j+Sx9gkCoTDT8x6KsmI7a7oeirJScXp8TDsiS8296AsyNOWkIj9j7ZNjzGuHq/jFta5ntgIL
      3gB3usY5FMfF9fFApRKoL8/mTtf4o2Nnb/dhSzOtK63mig6gTUplZHKGfTVl0Vv6BTqHZqmJ
      MvGV3KhUAqf2RC62ut42QmNFLuoEiKZkWpIoyEql6YkX4Uk+udXLiYZi9NrYiPQ2k+fq7Hx6
      dwBJkhibcXOlZZg3Tu5c17u14i8Y8DhweHwsLMivm7/eOhLTpY8bpaEim5b+qTXjy6IkcbVl
      mGO1hXGybG1ePVTJL651LUsr7vEGaOocTyhb5STr84VHYzNu/uq9Jn7r5fp1d/NWdAB9ShbZ
      JnAuPn4ZJDFIW8sDRsaXYs8zk6P0DY/hmB6npaWFxcDa+o9gKMzwtIuSFbICbzZ6rYb68pw1
      Q6Kj0y6SDFrSzMY4WbY2mZYkyvIyuPWF2Pgnt3o5Xlf0paz9H3Ki3s4f/+0l9lblUrCBfLLL
      nowkSZw/8zFhCTxe36PjAcc45rwq/PNDgJW0DBtzA4PMBVRUVxYyPDZLQX76qomxOodmybea
      4yp8Ww/Hawv4izdvc6gmn2e1ouea+ji2u0C2nTDl4vT+Ev7Lz2/RUJGNWiXgDYS41THKv/nO
      0YSzVU52l9j4yr4STu0p3tB7tcwBBEHg2NFD/O2bZ8gwPJ5E0CSlMtvdg8Ggx+v14nU7mJmZ
      ITszg76+IVJspWvuEjnn9nGivljWxFdykmlJxppmom/CSWXB8gGu1x+kd8zBt1+sTbjZ1ExL
      MlVFmdzpmuDgzgI+u9nHkd1FmOKkUdosNBp49Uj1hq9f8VeUQgHsxaWon3hR1foUqsuLKS8p
      wuNZxJRioXbXLuwlpeQXlZGVtnaX4OjuwqdyzyQip/eXcfYZIdHmnglqS7MS7uV/yC8dLOej
      m724F/3caB/l+fr4apS2Iiv+kiq9kTxbOirVE8sUBQG9wYBarSYzMwO9wYjJZEKlUmE0RDYZ
      lEiRn2dhz7Yw7/Yy7346EZQkSXzWPMix2qJNsmxtUk0Gdtgz+fO/v8bBmnwM+sRsaROJZQ4Q
      Dgbwexe5dreL/ASK1ccLlUrgWG0R57+wAH18dgFBEBJCvrEaLx8oR6/VKLV/hCxvAaQQbT3j
      VNozMZpS2Y77OeyvzuNu9wSBJ2YZLzQPxF32vBHMSXr+4FuHldo/QpY5gFqXRO2OUnY2HCDs
      maV7YPvtwK7XaagptnGrfQyAwOf5PnfHeLMGudgMdepWZcUxwP2bF3jvg48ZcwSoKP5yTaFH
      yot7S/j07tJuhff7JimXKd+nQmKxzAEkSUJrtmKQvPgD8Uknnoikm42Yk3T0jc1z4e4AJ7dA
      90dh/axYpQ113ye94nly0hN7wBdLBEHgpb1l/ORcCxq1ipwoc1wqJCbLWgABOHLyFZI1YQyG
      zVmvmyiUF6Tj8QVjku9TITFY3gIIAgZ1CKcf5tpbsOdHlzxpK6NWqfjDbx/BZJAnx6VC4rFi
      F0iblMrCVDfZ+Y9Vm2LQQ/ODbsyWNMpLCulub8Xtk0hP0eNZ9JCRV0l2+pevxTDHcIM2hc1n
      RQcIB/2MT05hzXmctSHomsFWshP/3NJuJWqdiVydxDxBgqEQKpVAOByOapdIBYV4s9wBJImR
      8VkOHD5EZcljHbnOksVcSyvmNCuzs3OopACTPpH0ZB2CwQhiCLXaGNUukQoK8Wa5HBqJyXk3
      CB6SjI83lxbUBnbX1iJJIj5fgIyMxBa1KShEwgoTYQILsxOMjY7xwblLyz8VVBiNm5cJQUFB
      TgRJ5u333G43ZvP6NkRWUNgs/j/zRyqTJUEMlQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sort by' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table calculation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Target Sales' width='192'>
      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
      +490+/8Hv0CT8IuzIl0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Totals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='parameters' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
